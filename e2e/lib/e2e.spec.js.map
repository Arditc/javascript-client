{"version":3,"sources":["../es6/e2e.spec.js"],"names":[],"mappings":"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","file":"e2e.spec.js","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nrequire('@splitsoftware/splitio');\nconst Split = global.splitio;\n\n// This override the default implementation, so you MUST to be sure you include\n// this AFTER the require('isomorphic-fetch')\nconst fetch = require('fetch-mock');\n\nconst tape = require('tape');\nconst url = require('@splitsoftware/splitio-utils/lib/url');\n\nconst splitChangesMock1 = require('./mocks/splitchanges.since.-1.json');\nconst splitChangesMock2 = require('./mocks/splitchanges.since.1457552620999.json');\nconst mySegmentsMock = require('./mocks/mysegments.facundo@split.io.json');\n\nfetch.mock(url(`/splitChanges?since=-1`), splitChangesMock1);\nfetch.mock(url(`/splitChanges?since=1457552620999`), splitChangesMock2);\nfetch.mock(url(`/mySegments/facundo@split.io`), mySegmentsMock);\n\ntape('E2E', assert => {\n  const sdk = Split({\n    core: {\n      authorizationKey: '<fake-token>',\n      key: 'facundo@split.io'\n    },\n    scheduler: {\n      featuresRefreshRate:    1,\n      segmentsRefreshRate:    1,\n      metricsRefreshRate:     3000, // for now I don't want to publish metrics during E2E run.\n      impressionsRefreshRate: 3000  // for now I don't want to publish impressions during E2E run.\n    }\n  });\n\n  assert.equal(sdk.getTreatment('blacklist'), 'control', 'control should be return');\n  assert.equal(sdk.getTreatment('whitelist'), 'control', 'control should be return');\n  assert.equal(sdk.getTreatment('splitters'), 'control', 'control should be return');\n  assert.equal(sdk.getTreatment('qc_team'), 'control', 'control should be return');\n\n  sdk.ready().then(function () {\n    assert.equal(sdk.getTreatment('blacklist'), 'not_allowed');\n    assert.equal(sdk.getTreatment('whitelist'), 'allowed');\n    assert.equal(sdk.getTreatment('splitters'), 'on');\n    assert.equal(sdk.getTreatment('qc_team'), 'no');\n\n    assert.equal(sdk.getTreatment('employees_between_21_and_50_and_chrome'), 'off');\n    assert.equal(sdk.getTreatment('employees_between_21_and_50_and_chrome', {\n      age: 21\n    }), 'off');\n    assert.equal(sdk.getTreatment('employees_between_21_and_50_and_chrome', {\n      age: 20,\n      agent: 'chrome'\n    }), 'off');\n    assert.equal(sdk.getTreatment('employees_between_21_and_50_and_chrome', {\n      age: 21,\n      agent: 'chrome'\n    }), 'on');\n\n    assert.equal(sdk.getTreatment('user_attr_gte_10_and_user_attr2_is_not_foo'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_gte_10_and_user_attr2_is_not_foo', {\n      attr: 55,\n      attr2: 'bar'\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_gte_10_and_user_attr2_is_not_foo', {\n      attr: 55,\n      attr2: 'foo'\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_account_in_whitelist'), 'off');\n    assert.equal(sdk.getTreatment('user_account_in_whitelist', {\n      account: 'key_1@split.io'\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_account_in_whitelist', {\n      account: 'key_6@split.io'\n    }), 'off');\n\n    // This is an special case for the browser.\n    assert.equal(sdk.getTreatment('user_account_in_segment_employees'), 'off');\n    assert.equal(sdk.getTreatment('user_account_in_segment_employees', {\n      account: 'key_1@split.io'\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_account_in_segment_all'), 'off');\n    assert.equal(sdk.getTreatment('user_account_in_segment_all', {\n      account: 'something'\n    }), 'on');\n\n    assert.equal(sdk.getTreatment('user_attr_btw_datetime_1458240947021_and_1458246884077'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_btw_datetime_1458240947021_and_1458246884077', {\n      attr: 1458240947021\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_btw_datetime_1458240947021_and_1458246884077', {\n      attr: 1458240947020\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_btw_number_10_and_20'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_btw_number_10_and_20', {\n      attr: 9\n    }), 'off');\n    assert.equal(sdk.getTreatment('user_attr_btw_number_10_and_20', {\n      attr: 21\n    }), 'off');\n    assert.equal(sdk.getTreatment('user_attr_btw_number_10_and_20', {\n      attr: 15\n    }), 'on');\n\n    assert.equal(sdk.getTreatment('user_attr_btw_10_and_20'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_btw_10_and_20', {\n      attr: 9\n    }), 'off');\n    assert.equal(sdk.getTreatment('user_attr_btw_10_and_20', {\n      attr: 21\n    }), 'off');\n    assert.equal(sdk.getTreatment('user_attr_btw_10_and_20', {\n      attr: 15\n    }), 'on');\n\n    assert.equal(sdk.getTreatment('user_attr_lte_datetime_1458240947021'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_lte_datetime_1458240947021', {\n      attr: 1458240947021\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_lte_datetime_1458240947021', {\n      attr: 1458240947020\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_lte_datetime_1458240947021', {\n      attr: 1458240947022\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_lte_number_10'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_lte_number_10', {\n      attr: 9\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_lte_number_10', {\n      attr: 10\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_lte_number_10', {\n      attr: 11\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_lte_10'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_lte_10', {\n      attr: 9\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_lte_10', {\n      attr: 10\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_lte_10', {\n      attr: 11\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_gte_datetime_1458240947021'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_gte_datetime_1458240947021', {\n      attr: 1458240947021\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_gte_datetime_1458240947021', {\n      attr: 1458240947300\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_gte_datetime_1458240947021', {\n      attr: 1458240947020\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_gte_number_10'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_gte_number_10', {\n      attr: 10\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_gte_number_10', {\n      attr: 11\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_gte_number_10', {\n      attr: 0\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_gte_10'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_gte_10', {\n      attr: 10\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_gte_10', {\n      attr: 11\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_gte_10', {\n      attr: 0\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_eq_datetime_1458240947021'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_eq_datetime_1458240947021', {\n      attr: 1458240947021\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_eq_datetime_1458240947021', {\n      attr: 11\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_eq_number_ten'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_eq_number_ten', {\n      attr: 10\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_eq_number_ten', {\n      attr: 9\n    }), 'off');\n\n    assert.equal(sdk.getTreatment('user_attr_eq_ten'), 'off');\n    assert.equal(sdk.getTreatment('user_attr_eq_ten', {\n      attr: 10\n    }), 'on');\n    assert.equal(sdk.getTreatment('user_attr_eq_ten', {\n      attr: 9\n    }), 'off');\n\n    assert.end();\n  });\n});\n"]}