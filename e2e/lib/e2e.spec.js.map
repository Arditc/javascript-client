{"version":3,"sources":["../es6/e2e.spec.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgBA,QAAQ,wBAAR;AACA,IAAM,QAAQ,OAAO,OAAP;;;;AAId,IAAM,QAAQ,QAAQ,YAAR,CAAR;;AAEN,IAAM,OAAO,QAAQ,MAAR,CAAP;AACN,IAAM,MAAM,QAAQ,sCAAR,CAAN;;AAEN,IAAM,oBAAoB,QAAQ,oCAAR,CAApB;AACN,IAAM,oBAAoB,QAAQ,+CAAR,CAApB;AACN,IAAM,iBAAiB,QAAQ,0CAAR,CAAjB;;AAEN,MAAM,IAAN,CAAW,6BAAX,EAA0C,iBAA1C;AACA,MAAM,IAAN,CAAW,wCAAX,EAAqD,iBAArD;AACA,MAAM,IAAN,CAAW,mCAAX,EAAgD,cAAhD;;AAEA,KAAK,KAAL,EAAY,kBAAU;AACpB,MAAM,MAAM,MAAM;AAChB,UAAM;AACJ,wBAAkB,cAAlB;AACA,WAAK,kBAAL;KAFF;AAIA,eAAW;AACT,2BAAwB,CAAxB;AACA,2BAAwB,CAAxB;AACA,0BAAwB,IAAxB;AACA,8BAAwB,IAAxB;AAJS,KAAX;GALU,CAAN,CADc;;AAcpB,SAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,WAAjB,CAAb,EAA4C,SAA5C,EAAuD,0BAAvD,EAdoB;AAepB,SAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,WAAjB,CAAb,EAA4C,SAA5C,EAAuD,0BAAvD,EAfoB;AAgBpB,SAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,WAAjB,CAAb,EAA4C,SAA5C,EAAuD,0BAAvD,EAhBoB;AAiBpB,SAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,SAAjB,CAAb,EAA0C,SAA1C,EAAqD,0BAArD,EAjBoB;AAkBpB,SAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,oBAAjB,CAAb,EAAqD,SAArD,EAAgE,0BAAhE,EAlBoB;;AAoBpB,MAAI,KAAJ,GAAY,IAAZ,CAAiB,YAAY;AAC3B,WAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,WAAjB,CAAb,EAA4C,aAA5C,EAA2D,0CAA3D,EAD2B;AAE3B,WAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,WAAjB,CAAb,EAA4C,SAA5C,EAAuD,2CAAvD,EAF2B;AAG3B,WAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,WAAjB,CAAb,EAA4C,IAA5C,EAAkD,2CAAlD,EAH2B;AAI3B,WAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,SAAjB,CAAb,EAA0C,IAA1C,EAAgD,yCAAhD,EAJ2B;AAK3B,WAAO,KAAP,CAAa,IAAI,YAAJ,CAAiB,oBAAjB,CAAb,EAAqD,SAArD,EAAgE,qCAAhE,EAL2B;AAM3B,WAAO,GAAP,GAN2B;GAAZ,CAAjB,CApBoB;CAAV,CAAZ","file":"e2e.spec.js","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nrequire('@splitsoftware/splitio');\nconst Split = global.splitio;\n\n// This override the default implementation, so you MUST to be sure you include\n// this AFTER the require('isomorphic-fetch')\nconst fetch = require('fetch-mock');\n\nconst tape = require('tape');\nconst url = require('@splitsoftware/splitio-utils/lib/url');\n\nconst splitChangesMock1 = require('./mocks/splitchanges.since.-1.json');\nconst splitChangesMock2 = require('./mocks/splitchanges.since.1457552620999.json');\nconst mySegmentsMock = require('./mocks/mysegments.facundo@split.io.json');\n\nfetch.mock(url(`/splitChanges?since=-1`), splitChangesMock1);\nfetch.mock(url(`/splitChanges?since=1457552620999`), splitChangesMock2);\nfetch.mock(url(`/mySegments/facundo@split.io`), mySegmentsMock);\n\ntape('E2E', assert => {\n  const sdk = Split({\n    core: {\n      authorizationKey: '<fake-token>',\n      key: 'facundo@split.io'\n    },\n    scheduler: {\n      featuresRefreshRate:    1,\n      segmentsRefreshRate:    1,\n      metricsRefreshRate:     3000, // for now I don't want to publish metrics during E2E run.\n      impressionsRefreshRate: 3000  // for now I don't want to publish impressions during E2E run.\n    }\n  });\n\n  assert.equal(sdk.getTreatment('blacklist'), 'control', 'control should be return');\n  assert.equal(sdk.getTreatment('whitelist'), 'control', 'control should be return');\n  assert.equal(sdk.getTreatment('splitters'), 'control', 'control should be return');\n  assert.equal(sdk.getTreatment('qc_team'), 'control', 'control should be return');\n  assert.equal(sdk.getTreatment('attr_between_dates'), 'control', 'control should be return');\n\n  sdk.ready().then(function () {\n    assert.equal(sdk.getTreatment('blacklist'), 'not_allowed', 'Ask for `blacklist` after initialization');\n    assert.equal(sdk.getTreatment('whitelist'), 'allowed', 'Ask for `whitelist` before initialization');\n    assert.equal(sdk.getTreatment('splitters'), 'on', 'Ask for `splitters` before initialization');\n    assert.equal(sdk.getTreatment('qc_team'), 'no', 'Ask for `qc_team` before initialization');\n    assert.equal(sdk.getTreatment('attr_between_dates'), 'control', 'invalid rules should return control');\n    assert.end();\n  });\n});\n"]}