## 7.3.0 (January 19, 2017)

### Added bucketing key support

Sometimes you want to have annonymous users but been able to track them as
users after a authentication process. Having this in mind, we provide a way to
generate treatments using a fixed key (bucketing key), while been able to change
the matching key without problem, so you can garantice a consistent experience
without been worried about the matching key.

```
var sdk = splitio({
  core: {
    authorizationKey: '<your-token>',
    key: {
      matchingKey: '<your-usual-key>',
      bucketingKey: '<a-new-key-for-calculate-the-treatment>'
    }
  }
});
```

### Added labels support

In order to improve visibility in what is happening while doing a matching, we
are collecting by default some extra information while doing a getTreatment
call. The information includes:

1. Which condition has been matched?
2. Which SDK language & version has generated the impression?
3. If you are running NodeJS, we are adding machine name and ip so you could
   track evaluations in a cluster.

## 7.1.1 (November 16, 2016)

* In some particular combinations of NodeJS / OS the
  `require('@splitsoftware/splitio')` could fail. Added a workaround to fix the
  problem.

## 7.1.0 (November 15, 2016)

* Bug fixing release. Reported an error with ember-browserify due to an
  incorrect reference to the core files.
* Development dependencies updated to latest. No breaking changes during the
  migration.

## 7.0.1 (September 16, 2016)

* Added missing support for UMD.
* Added more information in the README for easily installation.

## 6.0.1 (June 24, 2016)

* Critical bug fixed which prevent ready state of the SDK.

## 6.0.0 (June 24, 2016)

* In the browser land, it's important to have quick retries before after a
  stretch timeouts. We added new configurations to handle this.
* Added the concept of 'ready timeout', so you could take a controlled action if
  the SDK is taking too much time doing the startup.
* Fixed few bugs, specially for the browser release.
* `.ready()` method is deprecated in favor of
  `sdk.on(sdk.Event.SDK_READY, function onReady() { do something; })`

## 5.1.1 (June 13, 2016)

* Added missing support for events in offline mode (NodeJS and Browser).

## 5.1.0 (June 9, 2016)

* Bug fixing release.

## 5.0.0 (June 6, 2016)

* Added support for multiple instances. Now we can call the SDK factory multiple
  times.
* SDK instances inherit from EventEmitter. For now we only notifies state changes
  so you could ask the instance to evaluates `getTreatment` to reflect changes
  in your system.

## 4.0.0 (April 13, 2016)

* Refactored offline mode. No more url changes required to switch to development
  mode.

## 3.0.0 (April 10, 2016)

* Attributes support.

## 2.1.0 (March 29, 2016)

* Internal improvements. It's safe to upgrade without making code changes.

## 2.0.0 (March 21, 2016)

* Improved configurations in order to help developers, now all the refresh rates
  are in *seconds* instead of *milliseconds*.

* Updated defaults refresh rates with better ones.

## 1.0.1 (March 16, 2016)

* No changes made.

## 1.0.0 (March 15, 2016)

* Initial public release
