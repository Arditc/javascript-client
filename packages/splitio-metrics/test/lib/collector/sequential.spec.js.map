{"version":3,"sources":["../../es6/collector/Sequential.spec.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,mBAAmB,QAAQ,mCAAR,CAAnB;;AAEJ,KAAK,0DAAL,EAAiE,kBAAU;AACzE,MAAI,IAAI,kBAAJ,CADqE;;AAGzE,IAAE,KAAF,CAAQ,CAAR,EAHyE;AAIzE,IAAE,KAAF,CAAQ,CAAR,EAJyE;AAKzE,IAAE,KAAF,CAAQ,CAAR,EALyE;;AAOzE,SAAO,IAAP,CACE,EAAE,KAAF,GAAU,MAAV,CAAiB,UAAC,KAAD,EAAQ,CAAR,EAAW,CAAX;WAAiB,SAAS,IAAI,CAAJ;GAA1B,EAAiC,CAAlD,MAAyD,CAAzD,EACA,oDAFF,EAPyE;AAWzE,SAAO,GAAP,GAXyE;CAAV,CAAjE;;AAcA,KAAK,4DAAL,EAAmE,kBAAU;AAC3E,MAAI,IAAI,kBAAJ,CADuE;AAE3E,MAAI,SAAS,yBAAe,CAAf,CAAT,CAFuE;AAG3E,MAAI,SAAS,yBAAe,EAAE,KAAF,EAAf,CAAT,CAHuE;;AAK3E,SAAO,IAAP,CAAY,WAAW,MAAX,EAAmB,0DAA/B,EAL2E;AAM3E,SAAO,GAAP,GAN2E;CAAV,CAAnE","file":"Sequential.spec.js","sourcesContent":["'use strict';\n\nlet tape = require('tape');\nlet collectorFactory = require('../../../lib/collector/sequential');\n\ntape('SEQUENTIAL COLLECTOR / should incrementally store values', assert => {\n  let c = collectorFactory();\n\n  c.track(0);\n  c.track(1);\n  c.track(2);\n\n  assert.true(\n    c.state().reduce((accum, e, k) => accum += e - k, 0) === 0,\n    'all the items should be stored in sequential order'\n  );\n  assert.end();\n});\n\ntape('SEQUENTIAL COLLECTOR / should support custom toJSON method', assert => {\n  let c = collectorFactory();\n  let hooked = JSON.stringify(c);\n  let manual = JSON.stringify(c.state());\n\n  assert.true(hooked === manual, 'toJSON should expose the counters as an array of numbers');\n  assert.end();\n});\n"]}