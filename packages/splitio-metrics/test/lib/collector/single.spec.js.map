{"version":3,"sources":["../../es6/collector/single.spec.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,mBAAmB,QAAQ,+BAAR,CAAnB;;AAEJ,KAAK,yDAAL,EAAgE,kBAAU;AACxE,MAAI,IAAI,kBAAJ,CADoE;;AAGxE,IAAE,KAAF,GAHwE,CAG7D,CAAE,KAAF,GAH6D,CAGlD,CAAE,KAAF,GAHkD;;AAKxE,SAAO,IAAP,CAAY,EAAE,QAAF,OAAiB,CAAjB,EAAoB,qBAAhC,EALwE;AAMxE,SAAO,GAAP,GANwE;CAAV,CAAhE;;AASA,KAAK,yDAAL,EAAgE,kBAAU;AACxE,MAAI,IAAI,kBAAJ,CADoE;;AAGxE,IAAE,KAAF,GAHwE,CAG7D,CAAE,KAAF,GAH6D,CAGlD,CAAE,KAAF,GAHkD,CAGvC,CAAE,KAAF,GAHuC;;AAKxE,SAAO,IAAP,CAAY,EAAE,QAAF,OAAiB,CAAjB,EAAoB,cAAhC,EALwE;AAMxE,SAAO,GAAP,GANwE;CAAV,CAAhE;;AASA,KAAK,wDAAL,EAA+D,kBAAU;AACvE,MAAI,IAAI,kBAAJ,CADmE;AAEvE,MAAI,SAAS,yBAAe,CAAf,CAAT,CAFmE;AAGvE,MAAI,SAAS,yBAAe,EAAE,QAAF,EAAf,CAAT,CAHmE;;AAKvE,SAAO,IAAP,CAAY,WAAW,MAAX,EAAmB,0DAA/B,EALuE;AAMvE,SAAO,GAAP,GANuE;CAAV,CAA/D","file":"single.spec.js","sourcesContent":["'use strict';\n\nlet tape = require('tape');\nlet collectorFactory = require('../../../lib/collector/single');\n\ntape('SINGLE COLLECTOR / should implement a secuencia counter', assert => {\n  let c = collectorFactory();\n\n  c.track(); c.track(); c.track();\n\n  assert.true(c.counters() === 3, 'counter should be 3');\n  assert.end();\n});\n\ntape('SINGLE COLLECTOR / should start from 0 after clear call', assert => {\n  let c = collectorFactory();\n\n  c.track(); c.track(); c.track(); c.clear();\n\n  assert.true(c.counters() === 0, 'counter is 0');\n  assert.end();\n});\n\ntape('SINGLE COLLECTOR / should support custom toJSON method', assert => {\n  let c = collectorFactory();\n  let hooked = JSON.stringify(c);\n  let manual = JSON.stringify(c.counters());\n\n  assert.true(hooked === manual, 'toJSON should expose the counters as an array of numbers');\n  assert.end();\n});\n"]}