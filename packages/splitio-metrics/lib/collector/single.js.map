{"version":3,"sources":["../../es6/collector/single.js"],"names":[],"mappings":"WAAY;;AAEZ,SAAS,eAAT,GAA2B;AACzB,OAAK,KAAL,GADyB;CAA3B;;;AAKA,gBAAgB,SAAhB,CAA0B,QAA1B,GAAqC,yBAA0B;AAC7D,SAAO,KAAK,OAAL,CADsD;CAA1B;;;AAKrC,gBAAgB,SAAhB,CAA0B,KAA1B,GAAkC,yBAA0B;AAC1D,SAAO,EAAE,KAAK,OAAL,CADiD;CAA1B;;;AAKlC,gBAAgB,SAAhB,CAA0B,KAA1B,GAAkC,kCAAmC;AACnE,OAAK,OAAL,GAAe,CAAf,CADmE;;AAGnE,SAAO,IAAP,CAHmE;CAAnC;;;AAOlC,gBAAgB,SAAhB,CAA0B,MAA1B,GAAmC,YAAY;AAC7C,SAAO,KAAK,OAAL,CADsC;CAAZ;;AAInC,OAAO,OAAP,GAAiB,SAAS,sBAAT,GAAkC;AACjD,SAAO,IAAI,eAAJ,EAAP,CADiD;CAAlC","file":"single.js","sourcesContent":["/* @flow */ 'use strict';\n\nfunction SingleCollector() {\n  this.clear();\n}\n\n// counter based on the internal ranges\nSingleCollector.prototype.counters = function () /*: number */ {\n  return this.counter;\n};\n\n// increment counter\nSingleCollector.prototype.track = function () /*: number */ {\n  return ++this.counter;\n};\n\n// recycle the collector (reset using 0)\nSingleCollector.prototype.clear = function () /*: SingleCollector */ {\n  this.counter = 0;\n\n  return this;\n};\n\n// hook JSON.stringify to expose the state of the counter\nSingleCollector.prototype.toJSON = function () {\n  return this.counter;\n};\n\nmodule.exports = function SingleCollectorFactory() {\n  return new SingleCollector();\n};\n"]}