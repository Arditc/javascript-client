{"version":3,"sources":["../../es6/mutators/splitChanges.js"],"names":[],"mappings":"WAAY;;;;AAEZ,IAAI,QAAQ,QAAQ,+BAAR,EAAyC,KAAzC;;AAEZ,SAAS,qBAAT,CAA+B,0BAA/B,iBAA2E;;AAEzE,SAAO,SAAS,cAAT,CAAwB,uDAAxB,aAA6F;;AAElG,QAAI,YAAY,EAAZ,CAF8F;AAGlG,QAAI,kBAAkB,IAAI,GAAJ,EAAlB,CAH8F;;;;;;;AAKlG,2BAAsB,gCAAtB,oGAA8B;YAArB,wBAAqB;;AAC5B,YAAI,QAAQ,MAAM,SAAN,CAAR,CADwB;;AAG5B,kBAAU,IAAV,CAAe,KAAf,EAH4B;AAI5B,0BAAkB,IAAI,GAAJ,8BAAY,qCAAoB,MAAM,WAAN,IAAhC,CAAlB,CAJ4B;OAA9B;;;;;;;;;;;;;;KALkG;;AAYlG,mBAAe,SAAf,EAZkG;;AAclG,WAAO,eAAP,CAdkG;GAA7F,CAFkE;CAA3E;;AAqBA,OAAO,OAAP,GAAiB,qBAAjB","file":"splitChanges.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet parse = require('@splitsoftware/splitio-engine').parse;\n\nfunction splitMutationsFactory(splits /*: Array<Split> */) /*: Function */ {\n\n  return function splitMutations(storageMutator /*: (collection: Array<Split>) => any */) /*: void */ {\n\n    let splitDtos = [];\n    let segmentNamesSet = new Set();\n\n    for (let splitData of splits) {\n      let split = parse(splitData);\n\n      splitDtos.push(split);\n      segmentNamesSet = new Set([...segmentNamesSet, ...split.getSegments()]);\n    }\n\n    storageMutator(splitDtos);\n\n    return segmentNamesSet;\n  };\n\n}\n\nmodule.exports = splitMutationsFactory;\n"]}