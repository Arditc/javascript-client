{"version":3,"sources":["../../es6/mutators/splitChanges.js"],"names":[],"mappings":"WAAY;;;;AAEZ,IAAI,QAAQ,QAAQ,+BAAR,EAAyC,KAAzC;;AAEZ,SAAS,qBAAT,CAA+B,2BAA/B,iBAA4E;;AAE1E,SAAO,SAAS,cAAT,CAAwB,uDAAxB,aAA6F;AAClG,QAAI,OAAO,EAAP,CAD8F;AAElG,QAAI,kBAAkB,IAAI,GAAJ,EAAlB,CAF8F;;;;;;;AAIlG,2BAAc,gCAAd,oGAAsB;YAAb,gBAAa;;AACpB,YAAI,QAAQ,MAAM,CAAN,CAAR,CADgB;;AAGpB,aAAK,IAAL,CAAU,KAAV,EAHoB;AAIpB,0BAAkB,IAAI,GAAJ,8BAAY,qCAAoB,MAAM,WAAN,IAAhC,CAAlB,CAJoB;OAAtB;;;;;;;;;;;;;;KAJkG;;AAWlG,mBAAe,IAAf,EAXkG;;AAalG,WAAO,eAAP,CAbkG;GAA7F,CAFmE;CAA5E;;AAoBA,OAAO,OAAP,GAAiB,qBAAjB","file":"splitChanges.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet parse = require('@splitsoftware/splitio-engine').parse;\n\nfunction splitMutationsFactory(splits /*: Array<Object> */) /*: Function */ {\n\n  return function splitMutations(storageMutator /*: (collection: Array<Split>) => any */) /*: void */ {\n    let dtos = [];\n    let segmentNamesSet = new Set();\n\n    for (let s of splits) {\n      let split = parse(s);\n\n      dtos.push(split);\n      segmentNamesSet = new Set([...segmentNamesSet, ...split.getSegments()]);\n    }\n\n    storageMutator(dtos);\n\n    return segmentNamesSet;\n  };\n\n}\n\nmodule.exports = splitMutationsFactory;\n"]}