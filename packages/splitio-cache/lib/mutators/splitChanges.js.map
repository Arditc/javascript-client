{"version":3,"sources":["../../es6/mutators/splitChanges.js"],"names":[],"mappings":"WAAY,YAAY,CAAC;;;;AAEzB,IAAI,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;;AAE5C,SAAS,qBAAqB,CAAC,0BAAM,iBAAsC;;AAEzE,SAAO,SAAS,cAAc,CAAC,uDAAc,aAAuD;AAClG,QAAI,SAAS,GAAG,EAAE,CAAC;AACnB,QAAI,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;;;;;;;AAEhC,2BAAsB,MAAM,8HAAE;YAArB,SAAS;;AAChB,YAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;;AAE7B,iBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtB,uBAAe,GAAG,IAAI,GAAG,8BAAK,eAAe,sBAAK,KAAK,CAAC,WAAW,EAAE,GAAE,CAAC;OACzE;;;;;;;;;;;;;;;;AAED,kBAAc,CAAC,SAAS,CAAC,CAAC;;AAE1B,WAAO,eAAe,CAAC;GACxB,CAAC;CAEH;;AAED,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC","file":"splitChanges.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet parse = require('splitio-engine').parse;\n\nfunction splitMutationsFactory(splits /*: Array<Split> */) /*: Function */ {\n\n  return function splitMutations(storageMutator /*: (collection: Array<Split>) => any */) /*: void */ {\n    let splitDtos = [];\n    let segmentNamesSet = new Set();\n\n    for (let splitData of splits) {\n      let split = parse(splitData);\n\n      splitDtos.push(split);\n      segmentNamesSet = new Set([...segmentNamesSet, ...split.getSegments()]);\n    }\n\n    storageMutator(splitDtos);\n\n    return segmentNamesSet;\n  };\n\n}\n\nmodule.exports = splitMutationsFactory;\n"]}