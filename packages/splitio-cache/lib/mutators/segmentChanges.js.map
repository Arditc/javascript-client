{"version":3,"sources":["../../es6/mutators/segmentChanges.js"],"names":[],"mappings":"WAAY;;AAEZ,QAAQ,gBAAR;;;;;;;;;AASA,SAAS,uBAAT,gCAAkF;MAAhD,iBAAgD;MAA1C,mBAA0C;MAAnC,uBAAmC;;AAEhF,SAAO,SAAS,gBAAT,CAA0B,8BAA1B,EAA0D,8BAA1D,EAA0F;AAC/F,QAAI,WAAW,eAAe,IAAf,CAAX,CAD2F;;AAG/F,UAAM,OAAN,CAAc;aAAW,SAAS,GAAT,CAAa,OAAb;KAAX,CAAd,CAH+F;AAI/F,YAAQ,OAAR,CAAgB;aAAW,SAAS,MAAT,CAAgB,OAAhB;KAAX,CAAhB,CAJ+F;;AAM/F,mBAAe,IAAf,EAAqB,QAArB,EAN+F;GAA1F,CAFyE;CAAlF;;AAaA,OAAO,OAAP,GAAiB,uBAAjB","file":"segmentChanges.js","sourcesContent":["/* @flow */ 'use strict';\n\nrequire('babel-polyfill');\n\n/*::\n  type SegmentChangesDTO {\n    name: string,\n    added: Array<string>,\n    removed: Array<string>\n  }\n*/\nfunction segmentMutationsFactory({name, added, removed} /*: SegmentChangesDTO */) {\n\n  return function segmentMutations(storageAccesor /*: Function */, storageMutator /*: Function */) {\n    let segments = storageAccesor(name);\n\n    added.forEach(segment => segments.add(segment));\n    removed.forEach(segment => segments.delete(segment));\n\n    storageMutator(name, segments);\n  };\n\n}\n\nmodule.exports = segmentMutationsFactory;\n"]}