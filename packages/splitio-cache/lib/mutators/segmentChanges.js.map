{"version":3,"sources":["../../es6/mutators/segmentChanges.js"],"names":[],"mappings":"WAAY;;;;;;;;;;AASZ,SAAS,uBAAT,gCAAkF;MAAhD,iBAAgD;MAA1C,mBAA0C;MAAnC,uBAAmC;;AAEhF,SAAO,SAAS,gBAAT,CAA0B,8BAA1B,EAA0D,8BAA1D,EAA0F;AAC/F,QAAI,oBAAJ;;;AAD+F,QAI3F,MAAM,MAAN,KAAiB,CAAjB,IAAsB,QAAQ,MAAR,KAAmB,CAAnB,EAAsB;AAC9C,aAD8C;KAAhD;;AAIA,eAAW,eAAe,IAAf,CAAX,CAR+F;;AAU/F,UAAM,OAAN,CAAc;aAAW,SAAS,GAAT,CAAa,OAAb;KAAX,CAAd,CAV+F;AAW/F,YAAQ,OAAR,CAAgB;aAAW,SAAS,MAAT,CAAgB,OAAhB;KAAX,CAAhB,CAX+F;;AAa/F,mBAAe,IAAf,EAAqB,QAArB,EAb+F;GAA1F,CAFyE;CAAlF;;AAoBA,OAAO,OAAP,GAAiB,uBAAjB","file":"segmentChanges.js","sourcesContent":["/* @flow */ 'use strict';\n\n/*::\n  type SegmentChangesDTO {\n    name: string,\n    added: Array<string>,\n    removed: Array<string>\n  }\n*/\nfunction segmentMutationsFactory({name, added, removed} /*: SegmentChangesDTO */) {\n\n  return function segmentMutations(storageAccesor /*: Function */, storageMutator /*: Function */) {\n    let segments;\n\n    // nothing to do here\n    if (added.length === 0 && removed.length === 0) {\n      return;\n    }\n\n    segments = storageAccesor(name);\n\n    added.forEach(segment => segments.add(segment));\n    removed.forEach(segment => segments.delete(segment));\n\n    storageMutator(name, segments);\n  };\n\n}\n\nmodule.exports = segmentMutationsFactory;\n"]}