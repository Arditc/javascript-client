{"version":3,"sources":["../../../es6/storage/splits/index.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,YAAY,QAAQ,WAAR,CAAZ;;AAEJ,IAAI,SAAS,IAAI,UAAU,GAAV,EAAb;;AAEJ,OAAO,OAAP,GAAiB;AACf,0BAAO,6CAA8C;AACnD,aAAS,OAAO,aAAP,CAAqB,kBAAU;AACtC,oBAAc,OAAd,CAAsB,wBAAgB;AACpC,iBAAS,OAAO,GAAP,CAAW,aAAa,MAAb,EAAX,EAAkC,YAAlC,CAAT,CADoC;OAAhB,CAAtB,CADsC;;AAKtC,aAAO,MAAP,CALsC;KAAV,CAA9B,CADmD;GADtC;AAWf,oBAAI,qCAAsC;AACxC,WAAO,OAAO,GAAP,CAAW,WAAX,CAAP,CADwC;GAX3B;AAef,wBAAO;AACL,WAAO,OAAO,IAAP,EAAP,CADK;GAfQ;CAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet Immutable = require('Immutable');\n\nlet splits = new Immutable.Map();\n\nmodule.exports = {\n  update(updatedSplits /*: Array<Split>*/) /*: void */ {\n    splits = splits.withMutations(splits => {\n      updatedSplits.forEach(updatedSplit => {\n        splits = splits.set(updatedSplit.getKey(), updatedSplit);\n      });\n\n      return splits;\n    });\n  },\n\n  get(featureName /*: string */) /*: Set */ {\n    return splits.get(featureName);\n  },\n\n  toJS() {\n    return splits.toJS();\n  }\n};\n"]}