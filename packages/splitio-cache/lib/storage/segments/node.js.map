{"version":3,"sources":["../../../es6/storage/segments/node.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,MAAM,QAAQ,OAAR,EAAiB,wBAAjB,CAAN;;AAEN,SAAS,eAAT,GAA2B;AACzB,OAAK,OAAL,GAAe,mBAAf,CADyB;CAA3B;;;AAKA,gBAAgB,SAAhB,CAA0B,MAA1B,GAAmC,UAAU,IAAV,EAAwB,OAAxB,EAA4C;eAAlC;;GAAkC;;QAApB;;GAAoB;;AAC7E,4BAAwB,kBAAa,QAAQ,IAAR,UAArC,EAD6E;;AAG7E,OAAK,OAAL,CAAa,GAAb,CAAiB,IAAjB,EAAuB,OAAvB,EAH6E;CAA5C;;AAMnC,gBAAgB,SAAhB,CAA0B,GAA1B,GAAgC,UAAU,IAAV,EAA6B;;;;;;;;;eAAnB;;GAAmB;;eACpD,KAAK,OAAL,CAAa,GAAb,CAAiB,IAAjB,KAA0B,mBAA1B,EADoD;CAA7B;;AAIhC,gBAAgB,SAAhB,CAA0B,MAA1B,GAAmC,YAAiB;;;;;;;;;eAC3C,KAAK,OAAL,EAD2C;CAAjB;;AAInC,OAAO,OAAP,GAAiB,eAAjB","file":"node.js","sourcesContent":["const log = require('debug')('splitio-cache:segments');\n\nfunction SegmentsStorage() {\n  this.storage = new Map();\n}\n\n// @TODO in a near future I need to support merging strategy\nSegmentsStorage.prototype.update = function (name :string, segment :Set) :void {\n  log(`Updating segment ${name} with ${segment.size} keys`);\n\n  this.storage.set(name, segment);\n};\n\nSegmentsStorage.prototype.get = function (name :string) :Set {\n  return this.storage.get(name) || new Set();\n};\n\nSegmentsStorage.prototype.toJSON = function () :Map {\n  return this.storage;\n};\n\nmodule.exports = SegmentsStorage;\n"]}