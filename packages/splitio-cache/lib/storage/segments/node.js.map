{"version":3,"sources":["../../../es6/storage/segments/node.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,YAAY,QAAQ,WAAR,CAAZ;;AAEJ,IAAI,WAAW,IAAI,UAAU,GAAV,EAAf;;AAEJ,IAAI,MAAM,QAAQ,OAAR,EAAiB,wBAAjB,CAAN;;AAEJ,OAAO,OAAP,GAAiB;AAEf,0BAAO,oBAAoB,kCAAmC;AAC5D,8BAAwB,kBAAa,UAArC,EAD4D;;AAG5D,eAAW,SAAS,GAAT,CAAa,IAAb,EAAmB,UAAnB,CAAX,CAH4D;GAF/C;AAQf,oBAAI,8BAA+B;AACjC,WAAO,SAAS,GAAT,CAAa,IAAb,CAAP,CADiC;GARpB;AAYf,qCAAqB;AACnB,WAAO,SAAS,IAAT,EAAP,CADmB;GAZN;CAAjB","file":"node.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet Immutable = require('Immutable');\n\nlet segments = new Immutable.Map();\n\nlet log = require('debug')('splitio-cache:segments');\n\nmodule.exports = {\n\n  update(name /*: string */, segmentSet /*: Set */) /*: void */ {\n    log(`Updating segment ${name} with ${segmentSet}`);\n\n    segments = segments.set(name, segmentSet);\n  },\n\n  get(name /*: string */) /*: Set */ {\n    return segments.get(name);\n  },\n\n  toJS() /*: string */ {\n    return segments.toJS();\n  }\n\n};\n"]}