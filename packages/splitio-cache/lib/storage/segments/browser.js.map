{"version":3,"sources":["../../../es6/storage/segments/browser.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAM,MAAM,QAAQ,OAAR,EAAiB,wBAAjB,CAAN;;AAEN,SAAS,eAAT,GAA2B;AACzB,OAAK,OAAL,GAAe,mBAAf,CADyB;CAA3B;;AAIA,gBAAgB,SAAhB,CAA0B,MAA1B,GAAmC,UAAU,QAAV,EAA+B;AAChE,sFAA2C,gBAA3C,EADgE;;AAGhE,OAAK,OAAL,GAAe,QAAf,CAHgE;CAA/B;;AAMnC,gBAAgB,SAAhB,CAA0B,GAA1B,GAAgC,UAAU,IAAV,EAAiC;AAC/D,SAAO,KAAK,OAAL,CAAa,GAAb,CAAiB,IAAjB,CAAP,CAD+D;CAAjC;;AAIhC,gBAAgB,SAAhB,CAA0B,MAA1B,GAAmC,YAAY;AAC7C,SAAO,KAAK,OAAL,CADsC;CAAZ;;AAInC,OAAO,OAAP,GAAiB,eAAjB","file":"browser.js","sourcesContent":["const log = require('debug')('splitio-cache:segments');\n\nfunction SegmentsStorage() {\n  this.storage = new Set();\n}\n\nSegmentsStorage.prototype.update = function (segments :Set) :void {\n  log(`Updating my segments list with [${[...segments]}]`);\n\n  this.storage = segments;\n};\n\nSegmentsStorage.prototype.has = function (name :string) :boolean {\n  return this.storage.has(name);\n};\n\nSegmentsStorage.prototype.toJSON = function () {\n  return this.storage;\n};\n\nmodule.exports = SegmentsStorage;\n"]}