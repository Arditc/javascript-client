{"version":3,"sources":["../../es6/ds/segmentChanges.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,wBAAwB,QAAQ,oDAAR,CAAxB;AACN,IAAM,wBAAwB,QAAQ,wDAAR,CAAxB;;AAEN,IAAM,wBAAwB,QAAQ,4BAAR,CAAxB;AACN,IAAM,QAAQ,mBAAR;;AAEN,SAAS,WAAT,CAAqB,KAArB,EAA4B,WAA5B,EAAyC;AACvC,SAAO,sBAAsB,sBAAsB;AACjD,gBADiD;AAEjD,4BAFiD;GAAtB,CAAtB,EAIN,IAJM,CAID;WAAQ,KAAK,IAAL;GAAR,CAJC,CAKN,IALM,CAKD,gBAAQ;QACP,QAAe,KAAf,MADO;QACA,OAAQ,KAAR,KADA;;;AAGZ,QAAI,UAAU,IAAV,EAAgB;AAClB,aAAO,CAAC,IAAD,CAAP,CADkB;KAApB,MAEO;AACL,aAAO,kBAAQ,GAAR,CAAY,CACjB,IADiB,EAEjB,YAAY,KAAK,IAAL,EAAW,WAAvB,CAFiB,CAAZ,EAGJ,IAHI,CAGC,kBAAU;AAChB,gBAAQ,OAAO,CAAP,2CAAc,OAAO,CAAP,GAAtB,CADgB;OAAV,CAHR,CADK;KAFP;GAHI,CALC,CAmBN,KAnBM,CAmBA,YAAY;;;AAGjB,WAAO,EAAP,CAHiB;GAAZ,CAnBP,CADuC;CAAzC;;AA2BA,SAAS,wBAAT,CAAkC,WAAlC,EAA+C;AAC7C,MAAM,QAAQ,MAAM,GAAN,CAAU,WAAV,KAA0B,CAAC,CAAD,CADK;;AAG7C,SAAO,YAAY,KAAZ,EAAmB,WAAnB,EAAgC,IAAhC,CAAqC,UAAC,OAAD,EAAa;AACvD,QAAI,MAAM,QAAQ,MAAR,CAD6C;;AAGvD,QAAI,MAAM,CAAN,EAAS;AACX,YAAM,GAAN,CAAU,WAAV,EAAuB,QAAQ,MAAM,CAAN,CAAR,CAAiB,IAAjB,CAAvB,CADW;;AAGX,aAAO,sBAAsB,OAAtB,CAAP,CAHW;KAAb;GAH0C,CAA5C,CAH6C;CAA/C;;AAcA,OAAO,OAAP,GAAiB,wBAAjB;AACA,OAAO,OAAP,CAAe,WAAf,GAA6B,WAA7B;AACA,OAAO,OAAP,CAAe,KAAf,GAAuB,KAAvB","file":"segmentChanges.js","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nconst segmentChangesService = require('@splitsoftware/splitio-services/lib/segmentChanges');\nconst segmentChangesRequest = require('@splitsoftware/splitio-services/lib/segmentChanges/get');\n\nconst segmentMutatorFactory = require('../mutators/segmentChanges');\nconst cache = new Map();\n\nfunction greedyFetch(since, segmentName) {\n  return segmentChangesService(segmentChangesRequest({\n    since,\n    segmentName\n  }))\n  .then(resp => resp.json())\n  .then(json => {\n    let {since, till} = json;\n\n    if (since === till) {\n      return [json];\n    } else {\n      return Promise.all([\n        json,\n        greedyFetch(json.till, segmentName)\n      ]).then(flatMe => {\n        return [flatMe[0], ...flatMe[1]];\n      });\n    }\n  })\n  .catch(function () {\n    // if something goes wrong with the request to the server, we are going to\n    // stop requesting information till the next round of downloading\n    return [];\n  });\n}\n\nfunction segmentChangesDataSource(segmentName) {\n  const since = cache.get(segmentName) || -1;\n\n  return greedyFetch(since, segmentName).then((changes) => {\n    let len = changes.length;\n\n    if (len > 0) {\n      cache.set(segmentName, changes[len - 1].till);\n\n      return segmentMutatorFactory(changes);\n    }\n  });\n}\n\nmodule.exports = segmentChangesDataSource;\nmodule.exports.greedyFetch = greedyFetch;\nmodule.exports.cache = cache;\n"]}