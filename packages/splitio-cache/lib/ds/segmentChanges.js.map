{"version":3,"sources":["../../es6/ds/segmentChanges.js"],"names":[],"mappings":"WAAY;;;;AAEZ,QAAQ,kBAAR;;AAEA,IAAI,MAAM,QAAQ,OAAR,EAAiB,oBAAjB,CAAN;AACJ,IAAI,MAAM,QAAQ,QAAR,CAAN;AACJ,IAAI,wBAAwB,QAAQ,4BAAR,CAAxB;AACJ,IAAI,QAAQ,IAAI,GAAJ,EAAR;;AAEJ,SAAS,iBAAT,CAA2B,gBAA3B,EAA6C,WAA7C,EAA0D;AACxD,SAAU,wCAAmC,WAA7C,CADwD;CAA1D;;AAIA,SAAS,wBAAT,OAAmE;MAAhC,yCAAgC;MAAd,+BAAc;;AACjE,MAAI,WAAW,kBAAkB,gBAAlB,EAAoC,WAApC,CAAX,CAD6D;AAEjE,MAAI,aAAa,MAAM,GAAN,CAAU,QAAV,KAAuB,CAAvB,CAFgD;;AAIjE,SAAO,MAAM,yBAAuB,0BAAqB,UAA5C,CAAN,EAAiE;AACtE,YAAQ,KAAR;AACA,aAAS;AACP,gBAAU,kBAAV;AACA,sBAAgB,kBAAhB;AACA,mCAA2B,gBAA3B;KAHF;GAFK,EAQN,IARM,CAQD;WAAQ,KAAK,IAAL;GAAR,CARC,CASN,IATM,CASD,gBAAQ;QACP,QAAwB,KAAxB,MADO;QACA,OAAiB,KAAjB,KADA;;QACS,gCAAQ,yBADjB;;AAGZ,UAAM,GAAN,CAAU,QAAV,EAAoB,IAApB,EAHY;;AAKZ,WAAO,sBAAuB,IAAvB,CAAP,CALY;GAAR,CATC,CAgBN,KAhBM,CAgBA,iBAAS;AACd,cAAQ,oDAA+C,kCAA6B,wBAAmB,WAAvG,EADc;;AAGd,WAAO,KAAP,CAHc;GAAT,CAhBP,CAJiE;CAAnE;;AA2BA,OAAO,OAAP,GAAiB,wBAAjB","file":"segmentChanges.js","sourcesContent":["/* @flow */ 'use strict';\n\nrequire('isomorphic-fetch');\n\nlet log = require('debug')('splitio-cache:http');\nlet url = require('../url');\nlet segmentMutatorFactory = require('../mutators/segmentChanges');\nlet cache = new Map();\n\nfunction cacheKeyGenerator(authorizationKey, segmentName) {\n  return `${authorizationKey}/segmentChanges/${segmentName}`;\n}\n\nfunction segmentChangesDataSource({authorizationKey, segmentName}) {\n  let cacheKey = cacheKeyGenerator(authorizationKey, segmentName);\n  let sinceValue = cache.get(cacheKey) || 0;\n\n  return fetch(url(`/segmentChanges/${segmentName}?since=${sinceValue}`), {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${authorizationKey}`\n    }\n  })\n  .then(resp => resp.json())\n  .then(json => {\n    let {since, till, ...data} = json;\n\n    cache.set(cacheKey, till);\n\n    return segmentMutatorFactory( data );\n  })\n  .catch(error => {\n    log(`[${authorizationKey}] failure fetching segment [${segmentName}] using since [${sinceValue}] => [${error}]`);\n\n    return error;\n  });\n}\n\nmodule.exports = segmentChangesDataSource;\n"]}