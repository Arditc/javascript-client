{"version":3,"sources":["../../es6/updater/segmentChanges.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,MAAM,QAAQ,OAAR,EAAiB,uBAAjB,CAAN;;AAEN,IAAM,2BAA2B,QAAQ,sBAAR,CAA3B;AACN,IAAM,UAAU,QAAQ,YAAR,CAAV;;AAEN,SAAS,qBAAT,QAA4D;MAA5B,0CAA4B;;;;;;;;;;AAC1D,YAAQ,8CAAR;;;AAD0D,MAIpD,WAAW,QAAQ,MAAR,CAAe,WAAf,EAAX;;;AAJoD,cAOnD,kBAAQ,GAAR,CACL,2CAAI,UAAJ,CAAc,GAAd,CAAkB;WAAe,yBAAyB,EAAC,kCAAD,EAAmB,wBAAnB,EAAzB;GAAf,CADb,EAEL,IAFK,CAEA,4BAAoB;AACzB,qBAAiB,OAAjB,CAAyB;aAAW,QAAQ,QAAQ,QAAR,CAAiB,GAAjB,EAAsB,QAAQ,QAAR,CAAiB,MAAjB;KAAzC,CAAzB,CADyB;GAApB,CAFA,CAIJ,IAJI,CAIC;WAAM;GAAN,GAXkD;CAA5D;;AAcA,OAAO,OAAP,GAAiB,qBAAjB","file":"segmentChanges.js","sourcesContent":["const log = require('debug')('splitio-cache:updater');\n\nconst segmentChangesDataSource = require('../ds/segmentChanges');\nconst storage = require('../storage');\n\nfunction segmentChangesUpdater({authorizationKey}) :Promise {\n  log(`[${authorizationKey}] Updating segmentChanges`);\n\n  // Read the list of segments available.\n  const segments = storage.splits.getSegments();\n\n  // Per each segment, request the changes and mutate the storage accordingly.\n  return Promise.all(\n    [...segments].map(segmentName => segmentChangesDataSource({authorizationKey, segmentName}))\n  ).then(segmentsMutators => {\n    segmentsMutators.forEach(mutator => mutator(storage.segments.get, storage.segments.update));\n  }).then(() => storage);\n}\n\nmodule.exports = segmentChangesUpdater;\n"]}