{"version":3,"sources":["../../es6/updater/mySegments.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,uBAAuB,QAAQ,kBAAR,CAAvB;AACJ,IAAI,UAAU,QAAQ,YAAR,CAAV;AACJ,IAAI,MAAM,QAAQ,OAAR,EAAiB,uBAAjB,CAAN;;AAEJ,SAAS,iBAAT;cAEkB;MADhB,yCACgB;MADgB,eAChB;;AAChB,YAAQ,0CAAR,EADgB;;AAGhB,SAAO,qBAAqB,EAAC,kCAAD,EAAmB,QAAnB,EAArB,EACI,IADJ,CACS;WAAmB,gBAAgB,QAAQ,QAAR,CAAiB,MAAjB;GAAnC,CADT,CAEI,IAFJ,CAES;WAAM;GAAN,CAFhB,CAHgB;CAFlB;;AAUA,OAAO,OAAP,GAAiB,iBAAjB","file":"mySegments.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet mySegmentsDataSource = require('../ds/mySegments');\nlet storage = require('../storage');\nlet log = require('debug')('splitio-cache:updater');\n\nfunction mySegmentsUpdater({\n  authorizationKey /*: string */, key /*: string */\n}) /*: Promise */ {\n  log(`[${authorizationKey}] Updating mySegments`);\n\n  return mySegmentsDataSource({authorizationKey, key})\n            .then(segmentsMutator => segmentsMutator(storage.segments.update))\n            .then(() => storage);\n}\n\nmodule.exports = mySegmentsUpdater;\n"]}