{"version":3,"sources":["../../es6/mutators/segmentChanges.spec.js"],"names":[],"mappings":"AAAA;;;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,+BAA+B,QAAQ,sCAAR,CAA/B;;AAEJ,KAAK,iBAAL,EAAwB,kBAAU;AAChC,MAAI,iBAAiB;AACnB,UAAM,cAAN;AACA,WAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAP;AACA,aAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAT;GAHE,CAD4B;;AAOhC,MAAI,kBAAkB,IAAI,GAAJ,GAAU,GAAV,CAAc,cAAd,EAA8B,IAAI,GAAJ,CAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAR,CAA9B,CAAlB,CAP4B;AAQhC,WAAS,cAAT,CAAwB,WAAxB,EAAqC,UAArC,EAAiD;AAC/C,oBAAgB,GAAhB,CAAoB,WAApB,EAAiC,UAAjC,EAD+C;GAAjD;AAGA,WAAS,cAAT,CAAwB,WAAxB,EAAqC;AACnC,WAAO,gBAAgB,GAAhB,CAAoB,WAApB,CAAP,CADmC;GAArC;;AAIA,MAAI,UAAU,6BAA6B,cAA7B,CAAV,CAf4B;AAgBhC,UAAQ,cAAR,EAAwB,cAAxB,EAhBgC;;AAkBhC,SAAO,SAAP,8BACM,eAAe,cAAf,GADN,EAEE,eAAe,KAAf,EACA,+BAHF,EAlBgC;AAuBhC,SAAO,GAAP,GAvBgC;CAAV,CAAxB","file":"segmentChanges.spec.js","sourcesContent":["'use strict';\n\nlet tape = require('tape');\nlet segmentChangesMutatorFactory = require('../../../lib/mutators/segmentChanges');\n\ntape('Segment Changes', assert => {\n  let segmentChanges = {\n    name: 'test-segment',\n    added: ['a', 'b', 'c'],\n    removed: ['d', 'e', 'f']\n  };\n\n  let segmentsStorage = new Map().set('test-segment', new Set(['d', 'e', 'f']));\n  function storageMutator(segmentName, segmentSet) {\n    segmentsStorage.set(segmentName, segmentSet);\n  }\n  function storageAccesor(segmentName) {\n    return segmentsStorage.get(segmentName);\n  }\n\n  let mutator = segmentChangesMutatorFactory(segmentChanges);\n  mutator(storageAccesor, storageMutator);\n\n  assert.deepEqual(\n    [...storageAccesor('test-segment')],\n    segmentChanges.added,\n    'We should only have [a, b, c]'\n  );\n  assert.end();\n});\n"]}