{"version":3,"sources":["../../es6/mutators/mySegments.spec.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,2BAA2B,QAAQ,kCAAR,CAA3B;;AAEJ,KAAK,iBAAL,EAAwB,kBAAU;AAChC,MAAI,WAAW,CAAC,UAAD,EAAa,UAAb,CAAX,CAD4B;;AAGhC,MAAI,2BAAJ,CAHgC;AAIhC,WAAS,cAAT,CAAwB,UAAxB,EAAoC;AAClC,sBAAkB,UAAlB,CADkC;GAApC;;AAIA,MAAI,UAAU,yBAAyB,QAAzB,CAAV,CAR4B;AAShC,UAAQ,cAAR,EATgC;;AAWhC,SAAO,SAAP,4CAAqB,iBAArB,EAAuC,QAAvC,EAAiD,wEAAjD,EAXgC;AAYhC,SAAO,GAAP,GAZgC;CAAV,CAAxB","file":"mySegments.spec.js","sourcesContent":["'use strict';\n\nlet tape = require('tape');\nlet mySegmentsMutatorFactory = require('../../../lib/mutators/mySegments');\n\ntape('Segment mutator', assert => {\n  let segments = ['segment1', 'segment2'];\n\n  let segmentsStorage;\n  function storageMutator(segmentSet) {\n    segmentsStorage = segmentSet;\n  }\n\n  let mutator = mySegmentsMutatorFactory(segments);\n  mutator(storageMutator);\n\n  assert.deepEqual([...segmentsStorage], segments, 'once mutator called data should be the same as the originally provided');\n  assert.end();\n});\n"]}