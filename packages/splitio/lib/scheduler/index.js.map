{"version":3,"sources":["../../es6/scheduler/index.js"],"names":[],"mappings":"AAAA;;;;;AAKA,SAAS,gBAAT,GAA4B;AAC1B,MAAI,YAAY,SAAZ,CADsB;;AAG1B,SAAO;AACL,8BAAQ,oBAAoB,sDAAkE;wCAA1C;;OAA0C;;;;AAC5F,UAAI,wBAAwB,oBAAM,MAAN,CAAxB,CADwF;;AAG5F,kBAAY,WAAW,YAAM;AAC3B,cAAK,OAAL,eAAa,IAAI,cAAU,OAA3B,EAD2B;OAAN,EAEpB,KAFS,CAAZ,CAH4F;;AAO5F,aAAO,qBAAP,CAP4F;KADzF;AAWL,0BAAO;AACL,mBAAa,SAAb,EADK;AAEL,kBAAY,SAAZ,CAFK;KAXF;GAAP,CAH0B;CAA5B;;AAqBA,OAAO,OAAP,GAAiB,gBAAjB","file":"index.js","sourcesContent":["'use strict';\n\n// @TODO define a minimun value for delay so we could notify developers when\n// the value is too heavy.\n\nfunction schedulerFactory() {\n  let timeoutID = undefined;\n\n  return {\n    forever(fn /*: function */, delay /*: number */, ...fnArgs /*:? Array<any> */) /*: Promise */ {\n      let firstRunReturnPromise = fn(...fnArgs);\n\n      timeoutID = setTimeout(() => {\n        this.forever(fn, delay, ...fnArgs);\n      }, delay);\n\n      return firstRunReturnPromise;\n    },\n\n    kill() {\n      clearTimeout(timeoutID);\n      timeoutID = undefined;\n    }\n  };\n}\n\nmodule.exports = schedulerFactory;\n"]}