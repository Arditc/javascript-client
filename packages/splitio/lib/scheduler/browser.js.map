{"version":3,"sources":["../../es6/scheduler/browser.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,WAAW,QAAQ,2CAAR,CAAX;AACN,IAAM,mBAAmB,QAAQ,4CAAR,CAAnB;;eAGF,QAAQ,8BAAR;;IADF;IAAqB;;;AAGvB,SAAS,SAAT,GAAqB;AACnB,MAAI,eAAe,SAAS,GAAT,CAAa,MAAb,CAAf,CADe;AAEnB,MAAI,sBAAsB,SAAS,GAAT,CAAa,qBAAb,CAAtB,CAFe;AAGnB,MAAI,sBAAsB,SAAS,GAAT,CAAa,qBAAb,CAAtB,CAHe;;AAKnB,MAAI,wBAAwB,kBAAxB,CALe;AAMnB,MAAI,2BAA2B,kBAA3B;;;;AANe,SAUZ,kBAAQ,GAAR,CAAY,CACjB,sBAAsB,OAAtB,CAA8B,mBAA9B,EAAmD,mBAAnD,EAAwE,YAAxE,CADiB,EAEjB,yBAAyB,OAAzB,CAAiC,eAAjC,EAAkD,mBAAlD,EAAuE,YAAvE,CAFiB,CAAZ,EAGJ,IAHI,CAGC,gBAAqB;;;QAAV,mBAAU;;AAC3B,WAAO,OAAP,CAD2B;GAArB,CAHR,CAVmB;CAArB;;AAkBA,OAAO,OAAP,GAAiB,SAAjB","file":"browser.js","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nconst settings = require('@splitsoftware/splitio-utils/lib/settings');\nconst SchedulerFactory = require('@splitsoftware/splitio-utils/lib/scheduler');\nconst {\n  splitChangesUpdater, segmentsUpdater\n} = require('@splitsoftware/splitio-cache');\n\nfunction scheduler() {\n  let coreSettings = settings.get('core');\n  let featuresRefreshRate = settings.get('featuresRefreshRate');\n  let segmentsRefreshRate = settings.get('segmentsRefreshRate');\n\n  let splitRefreshScheduler = SchedulerFactory();\n  let segmentsRefreshScheduler = SchedulerFactory();\n\n  // Fetch Splits and Segments in parallel (there is none dependency between\n  // Segments and Splits)\n  return Promise.all([\n    splitRefreshScheduler.forever(splitChangesUpdater, featuresRefreshRate, coreSettings),\n    segmentsRefreshScheduler.forever(segmentsUpdater, segmentsRefreshRate, coreSettings)\n  ]).then(function ([storage]) {\n    return storage;\n  });\n}\n\nmodule.exports = scheduler;\n"]}