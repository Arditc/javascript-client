{"version":3,"sources":["../es6/sdk.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,QAAQ,qBAAR;;AAEA,IAAM,MAAM,QAAQ,OAAR,EAAiB,SAAjB,CAAN;;AAEN,IAAM,eAAe,QAAQ,2CAAR,CAAf;;AAEN,IAAM,gBAAgB,QAAQ,gCAAR,CAAhB;AACN,IAAM,qBAAqB,cAAc,WAAd;AAC3B,IAAM,sBAAsB,cAAc,YAAd;;AAE5B,IAAM,OAAO,QAAQ,QAAR,CAAP;;AAEN,SAAS,OAAT,CAAiB,sBAAjB,eAAuD;AACrD,MAAI,eAAJ,CADqD;AAErD,MAAI,2BAAJ;;;AAFqD,UAKrD,GAAW,aAAa,SAAb,CAAuB,QAAvB,CAAX;;;;AALqD,oBASrD,GAAqB,KAAK,KAAL,GAAa,IAAb,CAAkB,UAAU,iBAAV,EAA6B;AAClE,aAAS,iBAAT,CADkE;GAA7B,CAAlB,CAElB,KAFkB,CAEZ,YAAY,EAAZ,CAFT;;;AATqD,eAcrD,CAAc,KAAd,CAAoB,QAApB,EAdqD;;AAgBrD,SAAO;AACL,wCAAa,mBAAmB,2BAA2B,uCAAwC;AACjG,UAAI,YAAY,SAAZ,CAD6F;;AAGjG,UAAI,WAAW,SAAX,EAAsB;AACxB,2BAAmB;AACjB,mBAAS,WAAT;AACA,kBAFiB;AAGjB,8BAHiB;AAIjB,gBAAM,KAAK,GAAL,EAAN;SAJF,EADwB;;AAQxB,eAAO,SAAP,CARwB;OAA1B;;AAWA,UAAI,0BAA0B,qBAA1B;;AAd6F,UAgB7F,QAAQ,OAAO,MAAP,CAAc,GAAd,CAAkB,WAAlB,CAAR,CAhB6F;AAiBjG,UAAI,KAAJ,EAAW;AACT,oBAAY,MAAM,YAAN,CAAmB,GAAnB,EAAwB,UAAxB,CAAZ,CADS;;AAGT,yBAAe,wBAAmB,yBAAoB,SAAtD,EAHS;OAAX,MAIO;AACL,yBAAe,+BAAf,EADK;OAJP;;AAQA;;AAzBiG,wBA2BjG,CAAmB;AACjB,iBAAS,WAAT;AACA,gBAFiB;AAGjB,4BAHiB;AAIjB,cAAM,KAAK,GAAL,EAAN;OAJF,EA3BiG;;AAkCjG,aAAO,SAAP,CAlCiG;KAD9F;AAsCL,0CAAuB;AACrB,aAAO,kBAAP,CADqB;KAtClB;GAAP,CAhBqD;CAAvD;;AA4DA,OAAO,OAAP,GAAiB,OAAjB","file":"sdk.js","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\n// I'll need to fix first 'isomorphic-fetch' to be transpiled using\n// babel-runtime before remove this line of code.\nrequire('core-js/es6/promise');\n\nconst log = require('debug')('splitio');\n\nconst coreSettings = require('@splitsoftware/splitio-utils/lib/settings');\n\nconst metricsEngine = require('@splitsoftware/splitio-metrics');\nconst impressionsTracker = metricsEngine.impressions;\nconst getTreatmentTracker = metricsEngine.getTreatment;\n\nconst core = require('./core');\n\nfunction splitio(settings /*: object */) /*: object */ {\n  let engine;\n  let engineReadyPromise;\n\n  // setup settings for all the modules\n  settings = coreSettings.configure(settings);\n\n  // the engine startup is async (till we get localStorage as\n  // secondary cache)\n  engineReadyPromise = core.start().then(function (initializedEngine) {\n    engine = initializedEngine;\n  }).catch(function () {});\n\n  // startup monitoring tools\n  metricsEngine.start(settings);\n\n  return {\n    getTreatment(key /*: string */, featureName /*: string */, attributes /*: object */) /*: string */ {\n      let treatment = 'control';\n\n      if (engine === undefined) {\n        impressionsTracker({\n          feature: featureName,\n          key,\n          treatment,\n          when: Date.now()\n        });\n\n        return treatment;\n      }\n\n      let stopGetTreatmentTracker = getTreatmentTracker(); // start engine perf monitoring\n\n      let split = engine.splits.get(featureName);\n      if (split) {\n        treatment = split.getTreatment(key, attributes);\n\n        log(`feature ${featureName} key ${key} evaluated as ${treatment}`);\n      } else {\n        log(`feature ${featureName} doesn't exist`);\n      }\n\n      stopGetTreatmentTracker(); // finish engine perf monitoring\n\n      impressionsTracker({\n        feature: featureName,\n        key,\n        treatment,\n        when: Date.now()\n      });\n\n      return treatment;\n    },\n\n    ready() /*: Promise */ {\n      return engineReadyPromise;\n    }\n  };\n}\n\nmodule.exports = splitio;\n"]}