{"version":3,"sources":["../es6/index.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,OAAO,QAAQ,QAAR,CAAP;AACJ,IAAI,MAAM,QAAQ,OAAR,EAAiB,SAAjB,CAAN;;AAEJ,SAAS,OAAT,iBAAyC;AACvC,SAAO,KAAK,KAAL,wBAAoB,IAApB,CAAyB,mBAAW;AACzC,WAAO;AACL,0CAAa,mBAAmB,2BAA2B,6CAA8C;AACvG,YAAI,QAAQ,QAAQ,MAAR,CAAe,GAAf,CAAmB,WAAnB,CAAR,CADmG;;AAGvG,YAAI,KAAJ,EAAW;AACT,cAAI,YAAY,MAAM,YAAN,CAAmB,GAAnB,EAAwB,gBAAxB,CAAZ,CADK;;AAGT,2BAAe,wBAAmB,yBAAoB,SAAtD,EAHS;;AAKT,iBAAO,SAAP,CALS;SAAX,MAMO;AACL,2BAAe,+BAAf,EADK;;AAGL,iBAAO,gBAAP,CAHK;SANP;OAJG;AAiBL,wCAAY,mBAAmB,2BAA2B,oCAAqC;AAC7F,eAAO,KAAK,YAAL,CAAkB,GAAlB,EAAuB,WAAvB,MAAwC,SAAxC,CADsF;OAjB1F;KAAP,CADyC;GAAX,CAAhC,CADuC;CAAzC;;AA0BA,OAAO,OAAP,GAAiB,OAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet core = require('./core');\nlet log = require('debug')('splitio');\n\nfunction splitio(...args) /*: Promise */ {\n  return core.start(...args).then(storage => {\n    return {\n      getTreatment(key /*: string */, featureName /*: string */, defaultTreatment /*: string */) /*: string */ {\n        let split = storage.splits.get(featureName);\n\n        if (split) {\n          let treatment = split.getTreatment(key, defaultTreatment);\n\n          log(`feature ${featureName} key ${key} evaluated as ${treatment}`);\n\n          return treatment;\n        } else {\n          log(`feature ${featureName} doesn't exist`);\n\n          return defaultTreatment;\n        }\n      },\n\n      isTreatment(key /*: string */, featureName /*: string */, treatment /*: string */) /*: bool */ {\n        return this.getTreatment(key, featureName) === treatment;\n      }\n    };\n  });\n}\n\nmodule.exports = splitio;\n"]}