{"version":3,"sources":["../es6/index.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,eAAe,QAAQ,YAAR,CAAf;AACJ,IAAI,OAAO,QAAQ,QAAR,CAAP;;AAEJ,IAAI,UAAU,QAAQ,gCAAR,EAA0C,GAA1C,CAA8C,OAA9C,EAAV;AACJ,IAAI,MAAM,QAAQ,OAAR,EAAiB,SAAjB,CAAN;;AAEJ,SAAS,OAAT,CAAiB,sBAAjB,gBAAwD;;;AAGtD,eAAa,SAAb,CAAuB,QAAvB,EAHsD;;AAKtD,SAAO,KAAK,KAAL,GAAa,IAAb,CAAkB,mBAAW;AAClC,WAAO;AACL,0CAAa,mBAAmB,2BAA2B,6CAA8C;AACvG,YAAI,QAAQ,QAAQ,MAAR,CAAe,GAAf,CAAmB,WAAnB,CAAR,CADmG;AAEvG,YAAI,YAAY,IAAZ,CAFmG;;AAIvG,YAAI,OAAO,SAAP,CAJmG;AAKvG,YAAI,KAAJ,EAAW;AACT,sBAAY,MAAM,YAAN,CAAmB,GAAnB,EAAwB,gBAAxB,CAAZ,CADS;;AAGT,2BAAe,wBAAmB,yBAAoB,SAAtD,EAHS;SAAX,MAIO;AACL,sBAAY,gBAAZ,CADK;;AAGL,2BAAe,kDAA4C,SAA3D,EAHK;SAJP;AASA,eAduG;;AAgBvG,eAAO,SAAP,CAhBuG;OADpG;AAoBL,wCAAY,mBAAmB,2BAA2B,oCAAqC;AAC7F,eAAO,KAAK,YAAL,CAAkB,GAAlB,EAAuB,WAAvB,MAAwC,SAAxC,CADsF;OApB1F;KAAP,CADkC;GAAX,CAAzB,CALsD;CAAxD;;AAiCA,OAAO,OAAP,GAAiB,OAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet coreSettings = require('./settings');\nlet core = require('./core');\n\nlet tracker = require('@splitsoftware/splitio-metrics').sdk.tracker();\nlet log = require('debug')('splitio');\n\nfunction splitio(settings /*: object */) /*: Promise */ {\n\n  // setup settings for all the modules\n  coreSettings.configure(settings);\n\n  return core.start().then(storage => {\n    return {\n      getTreatment(key /*: string */, featureName /*: string */, defaultTreatment /*: string */) /*: string */ {\n        let split = storage.splits.get(featureName);\n        let treatment = null;\n\n        let stop = tracker();\n        if (split) {\n          treatment = split.getTreatment(key, defaultTreatment);\n\n          log(`feature ${featureName} key ${key} evaluated as ${treatment}`);\n        } else {\n          treatment = defaultTreatment;\n\n          log(`feature ${featureName} doesn't exist, using default ${treatment}`);\n        }\n        stop();\n\n        return treatment;\n      },\n\n      isTreatment(key /*: string */, featureName /*: string */, treatment /*: string */) /*: bool */ {\n        return this.getTreatment(key, featureName) === treatment;\n      }\n    };\n  });\n}\n\nmodule.exports = splitio;\n"]}