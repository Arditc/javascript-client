{"version":3,"sources":["../es6/index.js"],"names":[],"mappings":"WAAY,YAAY,CAAC;;AAEzB,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEtC,SAAS,QAAQ,iBAAyB;AACxC,SAAO,IAAI,CAAC,KAAK,MAAA,CAAV,IAAI,YAAe,CAAC,IAAI,CAAC,UAAA,OAAO,EAAI;AACzC,WAAO;;;;;AAIL,UAAI,gBAAC,oBAAM,EAAgB,yBAAW,gBAA+B;AACnE,YAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;;AAE5C,YAAI,KAAK,EAAE;AACT,cAAI,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAEzC,aAAG,wBAAsB,WAAW,aAAQ,MAAM,sBAAiB,eAAe,CAAG,CAAC;;AAEtF,iBAAO,eAAe,CAAC;SACxB,MAAM;AACL,aAAG,wBAAsB,WAAW,2BAAwB,CAAC;;AAE7D,iBAAO,KAAK,CAAC;SACd;OACF;KACF,CAAC;GACH,CAAC,CAAC;CACJ;;AAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet core = require('./core');\nlet log = require('debug')('splitio');\n\nfunction splitter(...args) /*: Promise */ {\n  return core.start(...args).then(storage => {\n    return {\n      /**\n       * Evaluates if a given 'userId' is enabled for a given featureName.\n       */\n      isOn(userId /*: string */, featureName /*: string */) /*: boolean */ {\n        let split = storage.splits.get(featureName);\n\n        if (split) {\n          let splitEvaluation = split.isOn(userId);\n\n          log(`[splitio] feature ${featureName} key ${userId} evaluated as ${splitEvaluation}`);\n\n          return splitEvaluation;\n        } else {\n          log(`[splitio] feature ${featureName} is not available yet`);\n\n          return false;\n        }\n      }\n    };\n  });\n}\n\nmodule.exports = splitter;\n"]}