{"version":3,"sources":["../es6/index.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,OAAO,QAAQ,QAAR,CAAP;AACJ,IAAI,MAAM,QAAQ,OAAR,EAAiB,SAAjB,CAAN;;AAEJ,SAAS,OAAT,iBAAyC;AACvC,SAAO,KAAK,KAAL,wBAAoB,IAApB,CAAyB,mBAAW;;AAEzC,WAAO;;;AAEL,0BAAK,mBAAmB,yCAA0C;AAChE,YAAI,QAAQ,QAAQ,MAAR,CAAe,GAAf,CAAmB,WAAnB,CAAR,CAD4D;;AAGhE,YAAI,KAAJ,EAAW;AACT,cAAI,kBAAkB,MAAM,IAAN,CAAW,GAAX,CAAlB,CADK;;AAGT,2BAAe,wBAAmB,yBAAoB,eAAtD,EAHS;;AAKT,iBAAO,eAAP,CALS;SAAX,MAMO;AACL,2BAAe,+BAAf,EADK;;AAGL,iBAAO,KAAP,CAHK;SANP;OALG;KAAP,CAFyC;GAAX,CAAhC,CADuC;CAAzC;;AAyBA,OAAO,OAAP,GAAiB,OAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet core = require('./core');\nlet log = require('debug')('splitio');\n\nfunction splitio(...args) /*: Promise */ {\n  return core.start(...args).then(storage => {\n\n    return {\n      // Evaluates if a given 'key' is enabled for a given featureName\n      isOn(key /*: string */, featureName /*: string */) /*: boolean */ {\n        let split = storage.splits.get(featureName);\n\n        if (split) {\n          let splitEvaluation = split.isOn(key);\n\n          log(`feature ${featureName} key ${key} evaluated as ${splitEvaluation}`);\n\n          return splitEvaluation;\n        } else {\n          log(`feature ${featureName} doesn't exist`);\n\n          return false;\n        }\n      }\n    };\n\n  });\n}\n\nmodule.exports = splitio;\n"]}