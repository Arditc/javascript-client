{"version":3,"sources":["../../es6/binarySearch/index.js"],"names":[],"mappings":";;AACA,SAAS,EAAT,CAAY,0BAAZ,EAAwC,mBAAxC,eAA2E;AACzE,MAAI,aAAa,CAAb,CADqE;AAEzE,MAAI,YAAY,MAAM,MAAN,GAAe,CAAf,CAFyD;AAGzE,MAAI,SAAS,KAAK,KAAL,CAAW,CAAC,YAAY,UAAZ,CAAD,GAA2B,CAA3B,CAApB,CAHqE;AAIzE,MAAI,WAAW,UAAX,CAJqE;AAKzE,MAAI,WAAW,SAAX,CALqE;;AAOzE,SAAO,MAAM,MAAN,MAAkB,KAAlB,IAA2B,aAAa,SAAb,EAAwB;;AAExD,QAAI,QAAQ,MAAM,MAAN,CAAR,EAAuB;AACzB,kBAAY,SAAS,CAAT,CADa;KAA3B,MAEO,IAAI,QAAQ,MAAM,MAAN,CAAR,EAAuB;AAChC,mBAAa,SAAS,CAAT,CADmB;KAA3B;;;AAJiD,UASxD,GAAS,KAAK,KAAL,CAAW,CAAC,YAAY,UAAZ,CAAD,GAA2B,CAA3B,CAApB,CATwD;GAA1D;;;AAPyE,MAoBrE,SAAS,QAAT,EAAmB;AACrB,aAAS,QAAT,CADqB;GAAvB,MAEO,IAAI,SAAS,QAAT,EAAmB;AAC5B,aAAS,QAAT,CAD4B;GAAvB;;;AAtBkE,MA2BrE,QAAQ,MAAM,MAAN,CAAR,IAAyB,SAAS,QAAT,EAAmB;AAC9C,WAAO,SAAS,CAAT,CADuC;GAAhD;;AAIA,SAAO,MAAP,CA/ByE;CAA3E;;AAkCA,OAAO,OAAP,GAAiB,EAAjB","file":"index.js","sourcesContent":["\nfunction bs(items /*: array<number> */, value /*: number */) /*: number */ {\n  let startIndex = 0;\n  let stopIndex = items.length - 1;\n  let middle = Math.floor((stopIndex + startIndex) / 2);\n  let minIndex = startIndex;\n  let maxIndex = stopIndex;\n\n  while (items[middle] !== value && startIndex < stopIndex) {\n    // adjust search area\n    if (value < items[middle]) {\n      stopIndex = middle - 1;\n    } else if (value > items[middle]) {\n      startIndex = middle + 1;\n    }\n\n    // recalculate middle\n    middle = Math.floor((stopIndex + startIndex) / 2);\n  }\n\n  // correct if middle is out of range\n  if (middle < minIndex) {\n    middle = minIndex;\n  } else if (middle > maxIndex) {\n    middle = maxIndex;\n  }\n\n  // we want to always return based on strict minor comparation\n  if (value < items[middle] && middle > minIndex) {\n    return middle - 1;\n  }\n\n  return middle;\n}\n\nmodule.exports = bs;\n"]}