{"version":3,"sources":["../../es6/impressions/dto.js"],"names":[],"mappings":";;AAAA,IAAM,UAAU,QAAQ,gBAAR,CAAV;;AAEN,OAAO,OAAP,GAAiB;AACf,8DAAyB,WAAW;AAClC,QAAI,mBAAmB,QAAQ,UAAU,KAAV,EAAR,EAA2B,SAA3B,CAAnB,CAD8B;AAElC,QAAI,MAAM,EAAN,CAF8B;;AAIlC,SAAK,IAAI,IAAJ,IAAY,gBAAjB,EAAmC;AACjC,UAAI,IAAJ,CAAS;AACP,kBAAU,IAAV;AACA,wBAAgB,iBAAiB,IAAjB,EAAuB,GAAvB,CAA2B,iBAAS;AAClD,iBAAO;AACL,qBAAS,MAAM,GAAN;AACT,uBAAW,MAAM,SAAN;AACX,kBAAM,MAAM,IAAN;WAHR,CADkD;SAAT,CAA3C;OAFF,EADiC;KAAnC;;AAaA,WAAO,GAAP,CAjBkC;GADrB;CAAjB","file":"dto.js","sourcesContent":["const groupBy = require('lodash.groupby');\n\nmodule.exports = {\n  fromImpressionsCollector(collector) {\n    let groupedByFeature = groupBy(collector.state(), 'feature');\n    let dto = [];\n\n    for (let name in groupedByFeature) {\n      dto.push({\n        testName: name,\n        keyImpressions: groupedByFeature[name].map(entry => {\n          return {\n            keyName: entry.key,\n            treatment: entry.treatment,\n            time: entry.when\n          };\n        })\n      });\n    }\n\n    return dto;\n  }\n};\n"]}