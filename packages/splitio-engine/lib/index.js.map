{"version":3,"sources":["../es6/index.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA,IAAI,SAAS,QAAQ,oBAAR,CAAT;;IAEE;AAEJ,WAFI,KAEJ,CAAY,QAAZ,EAAsB,SAAtB,EAAiC,QAAjC,EAA2C;wCAFvC,OAEuC;;AACzC,SAAK,QAAL,GAAgB,QAAhB,CADyC;AAEzC,SAAK,SAAL,GAAiB,SAAjB,CAFyC;AAGzC,SAAK,QAAL,GAAgB,QAAhB,CAHyC;GAA3C;;6BAFI;;6BAQK;AACP,aAAO,KAAK,QAAL,CAAc,IAAd,CADA;;;;kCAIK;AACZ,aAAO,KAAK,QAAL,CADK;;;;iCAID,KAAK,kBAAkB;AAClC,UAAI,KAAK,QAAL,CAAc,MAAd,EAAsB;AACxB,eAAO,gBAAP,CADwB;OAA1B;;AAIA,UAAI,YAAY,KAAK,SAAL,CAAe,GAAf,EAAoB,KAAK,QAAL,CAAc,IAAd,CAAhC,CAL8B;;AAOlC,aAAO,cAAc,SAAd,GAA0B,SAA1B,GAAsC,gBAAtC,CAP2B;;;;gCAUxB,KAAK,WAAW;AAC1B,aAAO,KAAK,YAAL,CAAkB,GAAlB,MAA2B,SAA3B,CADmB;;;;gCAIhB;AACV,aAAO,KAAK,QAAL,CAAc,MAAd,KAAyB,UAAzB,CADG;;;;0BAIC,oBAAoB;UAC1B,aAA2B,mBAA3B,WAD0B;UACX,kDAAY,oCADD;;oBAEH,OAAO,UAAP,EAFG;;UAE1B,8BAF0B;UAEf,4BAFe;;AAI/B,aAAO,IAAI,KAAJ,CAAU,QAAV,EAAoB,SAApB,EAA+B,QAA/B,CAAP,CAJ+B;;;SAlC7B;;;AA2CN,OAAO,OAAP,GAAiB,KAAjB","file":"index.js","sourcesContent":["'use strict';\n\nlet parser = require('./parser/condition');\n\nclass Split {\n\n  constructor(baseInfo, evaluator, segments) {\n    this.baseInfo = baseInfo;\n    this.evaluator = evaluator;\n    this.segments = segments;\n  }\n\n  getKey() {\n    return this.baseInfo.name;\n  }\n\n  getSegments() {\n    return this.segments;\n  }\n\n  getTreatment(key, defaultTreatment) {\n    if (this.baseInfo.killed) {\n      return defaultTreatment;\n    }\n\n    let treatment = this.evaluator(key, this.baseInfo.seed);\n\n    return treatment !== undefined ? treatment : defaultTreatment;\n  }\n\n  isTreatment(key, treatment) {\n    return this.getTreatment(key) === treatment;\n  }\n\n  isGarbage() {\n    return this.baseInfo.status === 'ARCHIVED';\n  }\n\n  static parse(splitFlatStructure) {\n    let {conditions, ...baseInfo} = splitFlatStructure;\n    let {evaluator, segments} = parser(conditions);\n\n    return new Split(baseInfo, evaluator, segments);\n  }\n\n}\n\nmodule.exports = Split;\n"]}