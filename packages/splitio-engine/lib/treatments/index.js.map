{"version":3,"sources":["../../es6/treatments/index.js"],"names":[],"mappings":"WAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;IASN;AAEJ,WAFI,UAEJ,CAAY,2BAAZ,EAAyC,+BAAzC,EAA0E;wCAFtE,YAEsE;;AACxE,QAAI,OAAO,OAAO,MAAP,GAAgB,CAAhB,CAAP,KAA8B,GAA9B,EAAmC,MAAM,IAAI,UAAJ,CAAe,mCAAf,CAAN,CAAvC;;AAEA,SAAK,OAAL,GAAe,MAAf,CAHwE;AAIxE,SAAK,WAAL,GAAmB,UAAnB,CAJwE;GAA1E;;6BAFI;;oCASY,8BAA+B;AAC7C,UAAI,IAAI,CAAJ,IAAS,IAAI,GAAJ,EAAS,MAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN,CAAtB;;2CAD6C;;;;;AAG7C,wDAAmB,KAAK,OAAL,CAAa,OAAb,UAAnB,oGAA2C;;;cAAjC,mBAAiC;cAA9B,mBAA8B;;AACzC,cAAI,KAAK,CAAL,EAAQ,OAAO,KAAK,WAAL,CAAiB,CAAjB,CAAP,CAAZ;SADF;;;;;;;;;;;;;;OAH6C;;;;0BAQlC,kDAAmD;yBACnC,KAAK,MAAL,CAAY,UAAC,KAAD,EAAQ,KAAR,EAAkB;YAClD,OAAmB,MAAnB,KADkD;YAC5C,YAAa,MAAb,UAD4C;;AAGvD,cAAM,MAAN,CAAa,IAAb,CAAmB,MAAM,GAAN,IAAa,IAAb,CAAnB,CAHuD;AAIvD,cAAM,UAAN,CAAiB,IAAjB,CAAuB,SAAvB,EAJuD;;AAMvD,eAAO,KAAP,CANuD;OAAlB,EAOpC;AACD,aAAK,CAAL;AACA,gBAAQ,EAAR;AACA,oBAAY,EAAZ;OAVyB,EADmC;;UACzD,6BADyD;UACjD,qCADiD;;AAc9D,aAAO,IAAI,UAAJ,CAAe,MAAf,EAAuB,UAAvB,CAAP,CAd8D;;;SAjB5D;;;AAmCN,OAAO,OAAP,GAAiB,UAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\n/*::\n  type PartitionDTO = {\n    treatment: string,\n    size: number\n  }\n*/\n\nclass Treatments {\n\n  constructor(ranges /*: Array<number> */, treatments /*: Array<string> */) {\n    if (ranges[ranges.length - 1] !== 100) throw new RangeError('Provided invalid dataset as input');\n\n    this._ranges = ranges;\n    this._treatments = treatments;\n  }\n\n  getTreatmentFor(x /*: number */) /*: string */ {\n    if (x < 0 || x > 100) throw new RangeError('Please provide a value between 0 and 100');\n\n    for (let [k, r] of this._ranges.entries()) {\n      if (x <= r) return this._treatments[k];\n    }\n  }\n\n  static parse(data /*: Array<PartitionDTO> */) /*: Treatments */ {\n    let {ranges, treatments} = data.reduce((accum, value) => {\n      let {size, treatment} = value;\n\n      accum.ranges.push( accum.inc += size );\n      accum.treatments.push( treatment );\n\n      return accum;\n    }, {\n      inc: 0,\n      ranges: [],\n      treatments: []\n    });\n\n    return new Treatments(ranges, treatments);\n  }\n}\n\nmodule.exports = Treatments;\n"]}