{"version":3,"sources":["../../es6/transforms/matcherGroup.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,eAAe,QAAQ,mBAAR,CAAf;;AAEJ,IAAI,mBAAmB,QAAQ,WAAR,CAAnB;AACJ,IAAI,qBAAqB,QAAQ,aAAR,CAArB;;;;;;;;;;;;AAYJ,SAAS,SAAT,CAAmB,0BAAnB,mBAAiE;8BAK3D,aAAa,QAAb,CAAsB,CAAtB,EAL2D;MAE7D,gDAF6D;MAG9B,sCAA/B,8BAH6D;MAIvC,wCAAtB,qBAJ6D;;;AAO/D,MAAI,OAAO,aAAa,MAAb,CAAoB,WAApB,CAAP,CAP2D;AAQ/D,MAAI,cAAJ,CAR+D;;AAU/D,MAAI,SAAS,aAAa,IAAb,CAAkB,GAAlB,EAAuB;AAClC,YAAQ,SAAR,CADkC;GAApC,MAEO,IAAI,SAAS,aAAa,IAAb,CAAkB,OAAlB,EAA2B;AAC7C,YAAQ,iBAAiB,aAAjB,CAAR,CAD6C;GAAxC,MAEA,IAAI,SAAS,aAAa,IAAb,CAAkB,SAAlB,EAA6B;AAC/C,YAAQ,mBAAmB,eAAnB,CAAR,CAD+C;GAA1C;;AAIP,SAAO;AACL,cADK;AAEL,gBAFK;GAAP,CAlB+D;CAAjE;;AAwBA,OAAO,OAAP,GAAiB,SAAjB","file":"matcherGroup.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet matcherTypes = require('../matchers/types');\n\nlet segmentTransform = require('./segment');\nlet whitelistTransform = require('./whitelist');\n\n/*::\n  type MatcherDTO {\n    type: Symbol,\n    value: undefined | string | Array<string>\n  }\n*/\n\n/**\n * Flat the complex matcherGroup structure into something handy.\n */\nfunction transform(matcherGroup /*: object */) /*: MatcherDTO */ {\n  let {\n    matcherType,\n    userDefinedSegmentMatcherData: segmentObject,\n    whitelistMatcherData: whitelistObject\n  } = matcherGroup.matchers[0];\n\n  let type = matcherTypes.mapper(matcherType);\n  let value;\n\n  if (type === matcherTypes.enum.ALL) {\n    value = undefined;\n  } else if (type === matcherTypes.enum.SEGMENT) {\n    value = segmentTransform(segmentObject);\n  } else if (type === matcherTypes.enum.WHITELIST) {\n    value = whitelistTransform(whitelistObject);\n  }\n\n  return {\n    type,\n    value\n  };\n}\n\nmodule.exports = transform;\n"]}