{"version":3,"sources":["../../es6/engine/index.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,iBAAiB,QAAQ,qBAAR,CAAjB;AACJ,IAAI,SAAS,QAAQ,eAAR,CAAT;AACJ,IAAI,MAAM,QAAQ,OAAR,EAAiB,gBAAjB,CAAN;;AAEJ,IAAI,SAAS;;;;AAIX,aAAW,CAAX;;;;;AAKA,sBAAK,mBAAmB,oBAAoB,qCAAsC;AAChF,QAAI,eAAe,WAAW,GAAX,CAAe,eAAe,IAAf,CAAoB,EAApB,CAA9B,CAD4E;AAEhF,QAAI,qBAAsB,OAAO,GAAP,EAAY,IAAZ,IAAoB,GAApB,CAFsD;;AAIhF,oCAA8B,6BAAwB,kBAAtD,EAJgF;;AAMhF,WAAO,gBAAgB,kBAAhB,CANyE;GATvE;CAAT;;AAmBJ,OAAO,OAAP,GAAiB,MAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet partitionTypes = require('../partitions/types');\nlet murmur = require('murmurhash-js');\nlet log = require('debug')('splitio-engine');\n\nlet engine = {\n  /**\n   * Defines how much error we could have at the moment we run percentage calculations.\n   */\n  TOLERANCE: 1, // For now, we consider 1% acceptable.\n\n  /**\n   * Get the treatment name given a key, and the seed of the feature.\n   */\n  isOn(key /*: string */, seed /*: number */, partitions /*: Map */) /*: boolean */ {\n    let percentageOn = partitions.get(partitionTypes.enum.ON);\n    let keyPercentageValue = (murmur(key, seed) % 100);\n\n    log(`[engine] percentage on ${percentageOn} and key ${keyPercentageValue}`);\n\n    return percentageOn >= keyPercentageValue;\n  }\n};\n\nmodule.exports = engine;\n"]}