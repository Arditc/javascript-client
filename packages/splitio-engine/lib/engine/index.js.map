{"version":3,"sources":["../../es6/engine/index.js"],"names":[],"mappings":"WAAY,YAAY,CAAC;;AAEzB,IAAI,cAAc,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACpD,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAAC;;AAE7C,IAAI,MAAM,GAAG;;;;AAIX,WAAS,EAAE,CAAC;;;;;AAKZ,MAAI,gBAAC,iBAAG,EAAgB,kBAAI,EAAgB,qBAAU,gBAA4B;AAChF,QAAI,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1D,QAAI,kBAAkB,GAAI,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,AAAC,CAAC;;AAEnD,OAAG,6BAA2B,YAAY,iBAAY,kBAAkB,CAAG,CAAC;;AAE5E,WAAO,YAAY,IAAI,kBAAkB,CAAC;GAC3C;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet partitionTypes = require('../partitions/types');\nlet murmur = require('murmurhash-js');\nlet log = require('debug')('splitio-engine');\n\nlet engine = {\n  /**\n   * Defines how much error we could have at the moment we run percentage calculations.\n   */\n  TOLERANCE: 1, // For now, we consider 1% acceptable.\n\n  /**\n   * Get the treatment name given a key, and the seed of the feature.\n   */\n  isOn(key /*: string */, seed /*: number */, partitions /*: Map */) /*: boolean */ {\n    let percentageOn = partitions.get(partitionTypes.enum.ON);\n    let keyPercentageValue = (murmur(key, seed) % 100);\n\n    log(`[engine] percentage on ${percentageOn} and key ${keyPercentageValue}`);\n\n    return percentageOn >= keyPercentageValue;\n  }\n};\n\nmodule.exports = engine;\n"]}