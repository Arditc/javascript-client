{"version":3,"sources":["../../../es6/matchers/segment/node.js"],"names":[],"mappings":"WAAY,YAAY,CAAC;;AAEzB,IAAI,eAAe,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC,QAAQ,CAAC;AACpE,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,wBAAwB,CAAC;;;;;AAAC,AAKrD,SAAS,qBAAqB,CAAC,yBAAW,EAAgB;AACxD,SAAO,SAAS,cAAc,CAAC,iBAAG,EAAgB;AAChD,QAAI,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAE5D,OAAG,iCAA+B,WAAW,WAAM,GAAG,YAAO,WAAW,CAAG,CAAC;;AAE5E,WAAO,WAAW,CAAC;GACpB,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC","file":"node.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet segmentsStorage = require('splitio-cache/lib/storage').segments;\nlet log = require('debug')('splitio-engine:matcher');\n\n/**\n * Segment Matcher Factory.\n */\nfunction matcherSegmentContext(segmentName /*: string */) {\n  return function segmentMatcher(key /*: string */) {\n    let isInSegment = segmentsStorage.get(segmentName).has(key);\n\n    log(`[segmentMatcher] evaluated ${segmentName} / ${key} => ${isInSegment}`);\n\n    return isInSegment;\n  };\n}\n\nmodule.exports = matcherSegmentContext;\n"]}