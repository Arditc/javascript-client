{"version":3,"sources":["../../../es6/matchers/segment/browser.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,MAAM,QAAQ,OAAR,EAAiB,wBAAjB,CAAN;;;AAGJ,SAAS,qBAAT,CAA+B,yBAA/B,EAA0D,sBAA1D,iBAAkG;AAChG,SAAO,SAAS,cAAT,+CAAsE;AAC3E,QAAI,wBAAwB,QAAQ,QAAR,CAAiB,GAAjB,CAAqB,WAArB,CAAxB,CADuE;;AAG3E,wCAAkC,uBAAkB,qBAApD,EAH2E;;AAK3E,WAAO,qBAAP,CAL2E;GAAtE,CADyF;CAAlG;;AAUA,OAAO,OAAP,GAAiB,qBAAjB","file":"browser.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet log = require('debug')('splitio-engine:matcher');\n\n// Segment Matcher Factory (for the browser).\nfunction matcherSegmentContext(segmentName /*: string */, storage /*: Storage */) /*: Function */ {\n  return function segmentMatcher(/* no need for the user key*/) /*: boolean */ {\n    let isSegmentInMySegments = storage.segments.has(segmentName);\n\n    log(`[segmentMatcher] evaluated ${segmentName} as ${isSegmentInMySegments}`);\n\n    return isSegmentInMySegments;\n  };\n}\n\nmodule.exports = matcherSegmentContext;\n"]}