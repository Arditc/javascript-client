{"version":3,"sources":["../../../es6/matchers/segment/browser.js"],"names":[],"mappings":"WAAY,YAAY,CAAC;;AAEzB,IAAI,eAAe,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC,QAAQ,CAAC;AACpE,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,wBAAwB,CAAC;;;;;AAAC,AAKrD,SAAS,qBAAqB,CAAC,yBAAW,iBAAgC;AACxE,SAAO,SAAS,cAAc,iBAAkB;AAC9C,QAAI,qBAAqB,GAAG,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;;AAE7D,OAAG,iCAA+B,WAAW,YAAO,qBAAqB,CAAG,CAAC;;AAE7E,WAAO,qBAAqB,CAAC;GAC9B,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC","file":"browser.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet segmentsStorage = require('splitio-cache/lib/storage').segments;\nlet log = require('debug')('splitio-engine:matcher');\n\n/**\n * Segment Matcher Factory (for the browser).\n */\nfunction matcherSegmentContext(segmentName /*: string */) /*: Function */ {\n  return function segmentMatcher() /*: boolean */ {\n    let isSegmentInMySegments = segmentsStorage.has(segmentName);\n\n    log(`[segmentMatcher] evaluated ${segmentName} as ${isSegmentInMySegments}`);\n\n    return isSegmentInMySegments;\n  };\n}\n\nmodule.exports = matcherSegmentContext;\n"]}