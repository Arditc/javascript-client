{"version":3,"sources":["../../es6/matchers/index.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAM,QAAQ,QAAQ,SAAR,EAAmB,IAAnB;;AAEd,IAAM,aAAa,QAAQ,OAAR,CAAb;AACN,IAAM,iBAAiB,QAAQ,WAAR,CAAjB;AACN,IAAM,mBAAmB,QAAQ,aAAR,CAAnB;;;;;;;;;;AAUN,SAAS,OAAT,CAAiB,sCAAjB,EAAyD,sBAAzD,iBAAiG;MAC1F,OAAe,gBAAf,KAD0F;MACpF,QAAS,gBAAT,MADoF;;;AAG/F,MAAI,SAAS,MAAM,GAAN,EAAW;AACtB,WAAO,WAAW,KAAX,CAAP,CADsB;GAAxB,MAEO,IAAI,SAAS,MAAM,OAAN,EAAe;AACjC,WAAO,eAAe,KAAf,EAAsB,OAAtB,CAAP,CADiC;GAA5B,MAEA,IAAI,SAAS,MAAM,SAAN,EAAiB;AACnC,WAAO,iBAAiB,KAAjB,CAAP,CADmC;GAA9B;CAPT;;AAYA,OAAO,OAAP,GAAiB,OAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nconst types = require('./types').enum;\n\nconst allMatcher = require('./all');\nconst segmentMatcher = require('./segment');\nconst whitelistMatcher = require('./whitelist');\n\n/*::\n  type MatcherAbstract {\n    type: Symbol,\n    value: undefined | string | Array<string>\n  }\n*/\n\n// Matcher factory.\nfunction factory(matcherAbstract /*: MatcherAbstract */, storage /*: Storage */) /*: function */ {\n  let {type, value} = matcherAbstract;\n\n  if (type === types.ALL) {\n    return allMatcher(value);\n  } else if (type === types.SEGMENT) {\n    return segmentMatcher(value, storage);\n  } else if (type === types.WHITELIST) {\n    return whitelistMatcher(value);\n  }\n}\n\nmodule.exports = factory;\n"]}