{"version":3,"sources":["../../es6/matchers/index.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAI,QAAQ,QAAQ,SAAR,EAAmB,IAAnB;;AAEZ,IAAI,aAAa,QAAQ,OAAR,CAAb;AACJ,IAAI,iBAAiB,QAAQ,WAAR,CAAjB;AACJ,IAAI,mBAAmB,QAAQ,aAAR,CAAnB;;;;;;;;;;;;;;;;AAgBJ,SAAS,OAAT,CAAiB,sCAAjB,EAAyD;MAClD,OAAe,gBAAf,KADkD;MAC5C,QAAS,gBAAT,MAD4C;;AAGvD,MAAI,SAAS,MAAM,GAAN,EAAW;AACtB,WAAO,WAAW,KAAX,CAAP,CADsB;GAAxB,MAEO,IAAI,SAAS,MAAM,OAAN,EAAe;AACjC,WAAO,eAAe,KAAf,CAAP,CADiC;GAA5B,MAEA,IAAI,SAAS,MAAM,SAAN,EAAiB;AACnC,WAAO,iBAAiB,KAAjB,CAAP,CADmC;GAA9B;CAPT;;AAYA,OAAO,OAAP,GAAiB,OAAjB","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet types = require('./types').enum;\n\nlet allMatcher = require('./all');\nlet segmentMatcher = require('./segment');\nlet whitelistMatcher = require('./whitelist');\n\n/*::\n  type MatcherAbstract {\n    type: Symbol,\n    value: undefined | string | Array<string>\n  }\n*/\n\n/**\n * Matcher factory.\n *\n * @param {Object} matcherAbstract - Descriptor object with type/value parameters for matchers building.\n *\n * @return {Function} matcher evaluator function\n */\nfunction factory(matcherAbstract /*: MatcherAbstract */) {\n  let {type, value} = matcherAbstract;\n\n  if (type === types.ALL) {\n    return allMatcher(value);\n  } else if (type === types.SEGMENT) {\n    return segmentMatcher(value);\n  } else if (type === types.WHITELIST) {\n    return whitelistMatcher(value);\n  }\n}\n\nmodule.exports = factory;\n"]}