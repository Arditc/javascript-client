{"version":3,"sources":["../../es6/matchers/index.js"],"names":[],"mappings":"WAAY,YAAY,CAAC;;AAEzB,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;;AAEpC,IAAI,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAClC,IAAI,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAC1C,IAAI,gBAAgB,GAAG,OAAO,CAAC,aAAa,CAAC;;;;;;;;;;;;;;;;AAAC,AAgB9C,SAAS,OAAO,CAAC,sCAAe,EAAyB;MAClD,IAAI,GAAW,eAAe,CAA9B,IAAI;MAAE,KAAK,GAAI,eAAe,CAAxB,KAAK;;AAEhB,MAAI,IAAI,KAAK,KAAK,CAAC,GAAG,EAAE;AACtB,WAAO,UAAU,CAAC,KAAK,CAAC,CAAC;GAC1B,MAAM,IAAI,IAAI,KAAK,KAAK,CAAC,OAAO,EAAE;AACjC,WAAO,cAAc,CAAC,KAAK,CAAC,CAAC;GAC9B,MAAM,IAAI,IAAI,KAAK,KAAK,CAAC,SAAS,EAAE;AACnC,WAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;GAChC;CACF;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"index.js","sourcesContent":["/* @flow */ 'use strict';\n\nlet types = require('./types').enum;\n\nlet allMatcher = require('./all');\nlet segmentMatcher = require('./segment');\nlet whitelistMatcher = require('./whitelist');\n\n/*::\n  type MatcherAbstract {\n    type: Symbol,\n    value: undefined | string | Array<string>\n  }\n*/\n\n/**\n * Matcher factory.\n *\n * @param {Object} matcherAbstract - Descriptor object with type/value parameters for matchers building.\n *\n * @return {Function} matcher evaluator function\n */\nfunction factory(matcherAbstract /*: MatcherAbstract */) {\n  let {type, value} = matcherAbstract;\n\n  if (type === types.ALL) {\n    return allMatcher(value);\n  } else if (type === types.SEGMENT) {\n    return segmentMatcher(value);\n  } else if (type === types.WHITELIST) {\n    return whitelistMatcher(value);\n  }\n}\n\nmodule.exports = factory;\n"]}