{"version":3,"sources":["../../es6/combiners/ifelseif.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,MAAM,QAAQ,OAAR,EAAiB,yBAAjB,CAAN;;AAEN,SAAS,sBAAT,GAAkC;AAChC,SAAO,SAAP,CADgC;CAAlC;;AAIA,SAAS,uBAAT,CAAiC,oFAAjC,iBAAuI;;AAErI,WAAS,gBAAT,CAA0B,iBAA1B,EAA6C,kBAA7C,EAAiE,wBAAjE,gBAA0G;;;;;;;;;AAIxG,sDAAsB,kBAAtB,oGAAkC;YAAzB,wBAAyB;;AAChC,YAAI,YAAY,UAAU,GAAV,EAAe,IAAf,EAAqB,UAArB,CAAZ,CAD4B;;AAGhC,YAAI,cAAc,SAAd,EAAyB;AAC3B,cAAI,oBAAJ,EAA0B,SAA1B,EAD2B;;AAG3B,iBAAO,SAAP,CAH2B;SAA7B;OAHF;;;;;;;;;;;;;;KAJwG;;AAcxG,QAAI,mDAAJ,EAdwG;;AAgBxG,WAAO,SAAP,CAhBwG;GAA1G;;;AAFqI,MAsBjI,CAAC,MAAM,OAAN,CAAc,UAAd,CAAD,IAA8B,MAAM,OAAN,CAAc,UAAd,KAA6B,WAAW,MAAX,KAAsB,CAAtB,EAAyB;AACtF,WAAO,sBAAP,CADsF;GAAxF,MAEO;AACL,WAAO,gBAAP,CADK;GAFP;CAtBF;;AA6BA,OAAO,OAAP,GAAiB,uBAAjB","file":"ifelseif.js","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nconst log = require('debug')('splitio-engine:combiner');\n\nfunction unexpectedInputHandler() {\n  return 'control';\n}\n\nfunction ifElseIfCombinerContext(predicates /*: Array<(key: string, seed: number, attributes: object) => ?string)> */) /*: function */ {\n\n  function ifElseIfCombiner(key /*: string */, seed /*: number */, attributes /*: object */) /*: ?string */ {\n\n    // loop throught the if else if structure and stops as soon as one predicate\n    // return a treatment\n    for (let evaluator of predicates) {\n      let treatment = evaluator(key, seed, attributes);\n\n      if (treatment !== undefined) {\n        log('treatment found %s', treatment);\n\n        return treatment;\n      }\n    }\n\n    log('all predicates evaluted, none treatment available');\n\n    return undefined;\n  }\n\n  // if there is none predicates, then there was an error in parsing phase\n  if (!Array.isArray(predicates) || Array.isArray(predicates) && predicates.length === 0) {\n    return unexpectedInputHandler;\n  } else {\n    return ifElseIfCombiner;\n  }\n}\n\nmodule.exports = ifElseIfCombinerContext;\n"]}