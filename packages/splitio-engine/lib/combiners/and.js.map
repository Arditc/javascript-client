{"version":3,"sources":["../../es6/combiners/and.js"],"names":[],"mappings":"WAAY;;AAEZ,IAAM,YAAY,QAAQ,wBAAR,CAAZ;;;AAGN,SAAS,UAAT,CAAoB,gEAApB,iBAAsG;;AAEpG,SAAO,SAAS,oBAAT,CAA8B,iBAA9B,EAAiD,kBAAjD,eAAmF;;;;;;AACxF,2BAAsB,oCAAtB,oGAAkC;YAAzB,wBAAyB;;AAChC,YAAI,YAAY,UAAU,GAAV,EAAe,IAAf,CAAZ,CAD4B;;AAGhC,YAAI,UAAU,IAAV,CAAgB,SAAhB,CAAJ,EAAiC,OAAO,SAAP,CAAjC;OAHF;;;;;;;;;;;;;;KADwF;;AAOxF,WAAO,UAAU,OAAV,CAPiF;GAAnF,CAF6F;CAAtG;;AAcA,OAAO,OAAP,GAAiB,UAAjB","file":"and.js","sourcesContent":["/* @flow */ 'use strict';\n\nconst TREATMENT = require('../treatments/reserved');\n\n// Premature evaluator (return as soon as something evaluates to true).\nfunction andContext(predicates /*: Array<(key: string, seed: number) => boolean)> */) /*: Function */ {\n\n  return function andCombinerEvaluator(key /*: string */, seed /*: number */) /*: string */ {\n    for (let evaluator of predicates) {\n      let treatment = evaluator(key, seed);\n\n      if (TREATMENT.isOn( treatment )) return treatment;\n    }\n\n    return TREATMENT.CONTROL;\n  };\n\n}\n\nmodule.exports = andContext;\n"]}