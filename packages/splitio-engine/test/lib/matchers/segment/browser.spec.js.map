{"version":3,"sources":["../../../es6/matchers/segment/browser.spec.js"],"names":[],"mappings":";;AAAA,IAAM,eAAe,QAAQ,gCAAR,CAAf;AACN,IAAM,iBAAiB,QAAQ,0BAAR,CAAjB;AACN,IAAM,OAAO,QAAQ,MAAR,CAAP;;AAEN,KAAK,kGAAL,EAAyG,kBAAU;AACjH,MAAM,UAAU,WAAV,CAD2G;;AAGjH,MAAM,UAAU,eAAe;AAC7B,UAAM,aAAa,IAAb,CAAkB,OAAlB;AACN,WAAO,OAAP;GAFc,EAGb;AACD,cAAU;AACR,wBAAI,aAAa;AACf,YAAI,gBAAgB,OAAhB,EAAyB;AAC3B,gBAAM,MAAM,yBAAN,CAAN,CAD2B;SAA7B;;AAIA,eAAO,YAAY,WAAZ,CALQ;OADT;KAAV;GAJc,CAAV,CAH2G;;AAkBjH,SAAO,IAAP,CAAY,SAAZ,EAAuB,kCAAvB,EAlBiH;AAmBjH,SAAO,GAAP,GAnBiH;CAAV,CAAzG","file":"browser.spec.js","sourcesContent":["const matcherTypes = require('../../../../lib/matchers/types');\nconst matcherFactory = require('../../../../lib/matchers');\nconst tape = require('tape');\n\ntape('MATCHER SEGMENT / should return true ONLY when the segment is defined inside the segment storage', assert => {\n  const segment = 'employees';\n\n  const matcher = matcherFactory({\n    type: matcherTypes.enum.SEGMENT,\n    value: segment\n  }, {\n    segments: {\n      has(segmentName) {\n        if (segmentName !== segment) {\n          throw Error('Unexpected segment name');\n        }\n\n        return segment === segmentName;\n      }\n    }\n  });\n\n  assert.true(matcher(), 'segment found in mySegments list');\n  assert.end();\n});\n"]}