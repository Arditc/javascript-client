{"version":3,"sources":["../../es6/parser/condition.spec.js"],"names":[],"mappings":"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","file":"condition.spec.js","sourcesContent":["'use strict';\n\nvar parser = require('../../../lib/parser/condition');\nvar tape = require('tape');\n\ntape('if user is in segment all 100%:on', function (assert) {\n\n  var {evaluator, segments} = parser([{\n    \"matcherGroup\": {\n      \"combiner\": \"AND\",\n      \"matchers\": [{\n        \"matcherType\": \"ALL_KEYS\",\n        \"negate\": false,\n        \"userDefinedSegmentMatcherData\": null,\n        \"whitelistMatcherData\": null\n      }]\n    },\n    \"partitions\": [{\n      \"treatment\": \"on\",\n      \"size\": 100\n    }]\n  }]);\n\n  assert.true(evaluator('a key'), 'evaluator should be evaluated to true');\n  assert.true(segments.size === 0, 'there is no segment present in the definition');\n\n  assert.end();\n});\n\ntape('if user is in segment all 100%:off', function (assert) {\n\n  var {evaluator, segments} = parser([{\n    \"matcherGroup\": {\n      \"combiner\": \"AND\",\n      \"matchers\": [{\n        \"matcherType\": \"ALL_KEYS\",\n        \"negate\": false,\n        \"userDefinedSegmentMatcherData\": null,\n        \"whitelistMatcherData\": null\n      }]\n    },\n    \"partitions\": [{\n      \"treatment\": \"on\",\n      \"size\": 0\n    }, {\n      \"treatment\": \"off\",\n      \"size\": 100\n    }]\n  }]);\n\n  assert.false(evaluator('a key'), 'evaluator should be evaluated to false');\n  assert.true(segments.size === 0, 'there is no segment present in the definition');\n\n  assert.end();\n});\n\ntape('if user is in segment [\"u1\", \" u2\", \" u3\", \" u4\"] then split 100%:on', function (assert) {\n\n  var {evaluator, segments} = parser([{\n    \"matcherGroup\": {\n      \"combiner\": \"AND\",\n      \"matchers\": [{\n        \"matcherType\": \"WHITELIST\",\n        \"negate\": false,\n        \"userDefinedSegmentMatcherData\": null,\n        \"whitelistMatcherData\": {\n          \"whitelist\": [\n            \"u1\",\n            \"u2\",\n            \"u3\",\n            \"u4\"\n          ]\n        }\n      }]\n    },\n    \"partitions\": [{\n      \"treatment\": \"on\",\n      \"size\": 100\n    }]\n  }]);\n\n  assert.false(evaluator('a key'), 'should be evaluated to false');\n  assert.true(evaluator('u1'), 'should be evaluated to true');\n  assert.true(evaluator('u3'), 'should be evaluated to true');\n  assert.true(segments.size === 0, 'there is no segment present in the definition');\n\n  assert.end();\n});\n\ntape('if user is in segment employees 50%:on', function (assert) {\n\n  var {evaluator, segments} = parser([{\n    \"matcherGroup\": {\n      \"combiner\": \"AND\",\n      \"matchers\": [{\n        \"matcherType\": \"IN_SEGMENT\",\n        \"negate\": false,\n        \"userDefinedSegmentMatcherData\": {\n          \"segmentName\": \"employees\"\n        },\n        \"whitelistMatcherData\": null\n      }]\n    },\n    \"partitions\": [{\n      \"treatment\": \"on\",\n      \"size\": 50\n    }, {\n      \"treatment\": \"control\",\n      \"size\": 50\n    }]\n  }]);\n\n  // assert.false(evaluator('a key'), 'evaluator should be evaluated to false');\n  assert.true(segments.has('employees'), `segment employees should be present`);\n\n  assert.end();\n});\n"]}