{"version":3,"sources":["../../es6/engine/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,SAAS,QAAQ,qBAAR,CAAT;;AAEJ,IAAI,aAAa,QAAQ,yBAAR,CAAb;AACJ,IAAI,iBAAiB,WAAW,KAAX,CAAiB,CAAC;AACrC,aAAW,IAAX;AACA,QAAM,CAAN;CAFoC,EAGnC;AACD,aAAW,KAAX;AACA,QAAM,EAAN;CALoC,CAAjB,CAAjB;;AAQJ,KAAK,mDAAL,EAA0D,kBAAU;AAClE,MAAI,OAAO,SAAP,CAD8D;AAElE,MAAI,MAAM,qBAAN,CAF8D;;AAIlE,MAAI,YAAY,KAAK,GAAL,EAAZ,CAJ8D;;AAMlE,SAAO,IAAP,CACE,OAAO,YAAP,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,cAA/B,MAAmD,KAAnD,EACA,2BAFF,EANkE;;AAWlE,MAAI,UAAU,KAAK,GAAL,EAAV,CAX8D;;AAalE,SAAO,OAAP,uBAAmC,CAAC,UAAU,SAAV,CAAD,GAAwB,IAAxB,aAAnC,EAbkE;AAclE,SAAO,GAAP,GAdkE;CAAV,CAA1D;;AAiBA,KAAK,kDAAL,EAAyD,kBAAU;AACjE,MAAI,OAAO,SAAP,CAD6D;AAEjE,MAAI,MAAM,cAAN,CAF6D;;AAIjE,MAAI,YAAY,KAAK,GAAL,EAAZ,CAJ6D;;AAMjE,SAAO,IAAP,CACE,OAAO,YAAP,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,cAA/B,MAAmD,IAAnD,EACA,0BAFF,EANiE;;AAWjE,MAAI,UAAU,KAAK,GAAL,EAAV,CAX6D;;AAajE,SAAO,OAAP,uBAAmC,CAAC,UAAU,SAAV,CAAD,GAAwB,IAAxB,aAAnC,EAbiE;AAcjE,SAAO,GAAP,GAdiE;CAAV,CAAzD","file":"index.spec.js","sourcesContent":["'use strict';\n\nlet tape = require('tape');\nlet engine = require('../../../lib/engine');\n\nlet Treatments = require('../../../lib/treatments');\nlet treatmentsMock = Treatments.parse([{\n  treatment: 'on',\n  size: 5\n}, {\n  treatment: 'off',\n  size: 95\n}]);\n\ntape('ENGINE / should evaluate always evaluate to false', assert => {\n  let seed = 467569525;\n  let key = 'aUfEsdPN1twuEjff9Sl';\n\n  let startTime = Date.now();\n\n  assert.true(\n    engine.getTreatment(key, seed, treatmentsMock) === 'off',\n    \"treatment should be 'off'\"\n  );\n\n  let endTime = Date.now();\n\n  assert.comment(`Evaluation takes ${(endTime - startTime) / 1000} seconds`);\n  assert.end();\n});\n\ntape('ENGINE / should evaluate always evaluate to true', assert => {\n  let seed = 467569525;\n  let key = 'fXvNwWFb7SXp';\n\n  let startTime = Date.now();\n\n  assert.true(\n    engine.getTreatment(key, seed, treatmentsMock) === 'on',\n    \"treatment should be 'on'\"\n  );\n\n  let endTime = Date.now();\n\n  assert.comment(`Evaluation takes ${(endTime - startTime) / 1000} seconds`);\n  assert.end();\n});\n"]}