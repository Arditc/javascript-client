{"version":3,"sources":["../../es6/engine/utils.spec.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA,IAAM,OAAO,QAAQ,MAAR,CAAP;AACN,IAAM,QAAQ,QAAQ,2BAAR,CAAR;AACN,IAAM,MAAM,QAAQ,eAAR,CAAN;AACN,IAAM,KAAK,QAAQ,IAAR,CAAL;;AAEN,KAAK,sDAAL,EAA6D,kBAAU;AACrE,MAAI,SAAS,KAAT,CADiE;;AAGrE,SAAO,EAAP,CAAU,MAAV,EAAkB,gBAAQ;sBACQ,KAAK,KAAL,CAAY,KAAK,QAAL,CAAc,MAAd,EAAsB,IAAtB,EAAZ,EADR;;;;QACnB,uBADmB;QACb,sBADa;QACR,uBADQ;QACF,yBADE;;;AAGxB,WAAO,SAAS,IAAT,EAAe,EAAf,CAAP,CAHwB;AAIxB,WAAO,SAAS,IAAT,EAAe,EAAf,CAAP,CAJwB;AAKxB,aAAS,SAAS,MAAT,EAAiB,EAAjB,CAAT,CALwB;;AAOxB,WAAO,KAAP,CAAa,MAAM,IAAN,CAAW,GAAX,EAAgB,IAAhB,CAAb,EAAoC,IAApC,EAA0C,iCAA1C,EAPwB;AAQxB,WAAO,KAAP,CAAa,MAAM,MAAN,CAAa,GAAb,EAAkB,IAAlB,CAAb,EAAsC,MAAtC,EAA8C,mCAA9C,EARwB;GAAR,CAAlB,CASG,EATH,CASM,KATN,EASa,OAAO,GAAP,CATb,CAHqE;;AAcrE,KAAG,gBAAH,CAAoB,QAAQ,OAAR,CAAgB,wBAAhB,CAApB,EAA+D,IAA/D,CAAoE,MAApE,EAdqE;CAAV,CAA7D","file":"utils.spec.js","sourcesContent":["'use strict';\n\nconst tape = require('tape');\nconst utils = require('../../../lib/engine/utils');\nconst csv = require('csv-streamify');\nconst fs = require('fs');\n\ntape('ENGINE / validate hashing behavior using sample data', assert => {\n  let parser = csv();\n\n  parser.on('data', line => {\n    let [seed, key, hash, bucket] = JSON.parse( line.toString('utf8').trim() );\n\n    seed = parseInt(seed, 10);\n    hash = parseInt(hash, 10);\n    bucket = parseInt(bucket, 10);\n\n    assert.equal(utils.hash(key, seed), hash, 'matching using int32 hash value');\n    assert.equal(utils.bucket(key, seed), bucket, 'matching using int32 bucket value');\n  }).on('end', assert.end);\n\n  fs.createReadStream(require.resolve('./mocks/small-data.csv')).pipe(parser);\n});\n"]}