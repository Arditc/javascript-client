{"version":3,"sources":["../../es6/transforms/segment.spec.js"],"names":[],"mappings":";;AAAA,IAAM,YAAY,QAAQ,iCAAR,CAAZ;AACN,IAAM,OAAO,QAAQ,MAAR,CAAP;;AAEN,KAAK,6DAAL,EAAoE,UAAU,MAAV,EAAkB;AACpF,MAAM,cAAc,WAAd,CAD8E;AAEpF,MAAM,SAAS;AACb,4BADa;GAAT,CAF8E;;AAMpF,MAAM,mBAAmB,UAAU,MAAV,CAAnB,CAN8E;;AAQpF,SAAO,KAAP,CAAa,WAAb,EAA0B,gBAA1B,EAA4C,+BAA5C,EARoF;AASpF,SAAO,GAAP,GAToF;CAAlB,CAApE;;AAYA,KAAK,oEAAL,EAA2E,UAAU,MAAV,EAAkB;AAC3F,MAAM,SAAS,SAAT,CADqF;AAE3F,MAAM,uBAAuB,UAAU,MAAV,CAAvB,CAFqF;;AAI3F,SAAO,KAAP,CAAa,oBAAb,EAAmC,SAAnC,EAA8C,0BAA9C,EAJ2F;AAK3F,SAAO,GAAP,GAL2F;CAAlB,CAA3E","file":"segment.spec.js","sourcesContent":["const transform = require('../../../lib/transforms/segment');\nconst tape = require('tape');\n\ntape('TRANSFORMS / a segment object should be flatten to a string', function (assert) {\n  const segmentName = 'employees';\n  const sample = {\n    segmentName\n  };\n\n  const plainSegmentName = transform(sample);\n\n  assert.equal(segmentName, plainSegmentName, 'extracted segmentName matches');\n  assert.end();\n});\n\ntape('TRANSFORMS / if there is none segmentName entry, returns undefined', function (assert) {\n  const sample = undefined;\n  const undefinedSegmentName = transform(sample);\n\n  assert.equal(undefinedSegmentName, undefined, 'expected to be undefined');\n  assert.end();\n});\n"]}