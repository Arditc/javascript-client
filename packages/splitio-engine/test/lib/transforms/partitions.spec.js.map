{"version":3,"sources":["../../es6/transforms/partitions.spec.js"],"names":[],"mappings":"AAAA;;;;AAEA,IAAI,YAAY,QAAQ,oCAAR,CAAZ;AACJ,IAAI,iBAAiB,QAAQ,+BAAR,CAAjB;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;;;;;;;;;AASJ,SAAS,cAAT,CAAwB,KAAxB,EAA+B,MAA/B,EAAuC;AACrC,MAAI,WAAW,MAAM,OAAO,QAAP,CAAN,EAAX,CADiC;;;;;;;AAGrC,yBAAwB,UAAU,KAAV,2BAAxB,oGAA0C;;;UAAjC,qBAAiC;UAA5B,uBAA4B;iCAChB,SAAS,IAAT,GAAgB,KAAhB,CADgB;UACnC,2CADmC;UACxB,iCADwB;;AAGxC,aAAO,KAAP,CAAa,eAAe,IAAf,CAAoB,SAApB,CAAb,EAA6C,GAA7C,EAAqD,yBAArD,EAHwC;AAIxC,aAAO,KAAP,CAAa,IAAb,EAAmB,KAAnB,EAA6B,oBAA7B,EAJwC;KAA1C;;;;;;;;;;;;;;GAHqC;CAAvC;;AAWA,KAAK,gCAAL,EAAuC,UAAU,MAAV,EAAkB;;AAEvD,MAAI,kBAAkB,CAAC;AACrB,iBAAa,IAAb;AACA,YAAQ,CAAR;GAFoB,EAGnB;AACD,iBAAa,SAAb;AACA,YAAQ,EAAR;GALoB,CAAlB,CAFmD;;AAUvD,iBAAe,eAAf,EAAgC,MAAhC,EAVuD;;AAYvD,SAAO,GAAP,GAZuD;CAAlB,CAAvC;;AAeA,KAAK,sBAAL,EAA6B,UAAU,MAAV,EAAkB;;AAE7C,MAAI,qBAAqB,CAAC;AACxB,iBAAa,IAAb;AACA,YAAQ,GAAR;GAFuB,CAArB,CAFyC;;AAO7C,iBAAe,kBAAf,EAAmC,MAAnC,EAP6C;;AAS7C,SAAO,GAAP,GAT6C;CAAlB,CAA7B","file":"partitions.spec.js","sourcesContent":["'use strict';\n\nvar transform = require('../../../lib/transforms/partitions');\nvar partitionTypes = require('../../../lib/partitions/types');\nvar tape = require('tape');\n\n/**\n * Assert if a given Array<Partition> is correctly mapped into a Map\n *\n * @param {array<{treatment: string, size: number}>} input\n * @param {tape} assert\n * @return void\n */\nfunction checkTransform(input, assert) {\n  let iterator = input[Symbol.iterator]();\n\n  for(let [key, value] of transform(input)) {\n    let {treatment, size} = iterator.next().value;\n\n    assert.equal(partitionTypes.type(treatment), key, `${treatment} is correct`);\n    assert.equal(size, value, `${size} is correct`);\n  }\n}\n\ntape('Partition => 5%:on 95%:control', function (assert) {\n  // example of 2 partitions distribution\n  let five_percent_on = [{\n    \"treatment\": \"on\",\n    \"size\": 5\n  }, {\n    \"treatment\": \"control\",\n    \"size\": 95\n  }];\n\n  checkTransform(five_percent_on, assert);\n\n  assert.end();\n});\n\ntape('Partition => 100%:on', function (assert) {\n  // example of 100% partition\n  let hundred_percent_on = [{\n    \"treatment\": \"on\",\n    \"size\": 100\n  }];\n\n  checkTransform(hundred_percent_on, assert);\n\n  assert.end();\n});\n"]}